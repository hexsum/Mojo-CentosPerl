.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Mojo::Weixin 3"
.TH Mojo::Weixin 3 "2016-10-21" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojo::Weixin \- A Weixin Client Framework base on Mojolicious
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 5
\&    use Mojo::Weixin;
\&    my $client = Mojo::Weixin\->new(
\&        http_debug  => 0,       #XXXXXXXdebugXX
\&        log_level => "info",  #XXXXXXXdebug|info|warn|error|fatal 
\&    );
\&
\&    #XXXXXShowMsgXXXXXXXXXXXXXXXXXX
\&    $client\->load("ShowMsg");
\&
\&    #readyXXXXX XXXXXXXXXXXXXXXXXXXXXXXXXX/XX/XXXX
\&    #XXXXXXXXXX ready XXX
\&    $client\->on(ready=>sub{
\&        my $client = shift;
\&
\&        #XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&        $client\->on(receive_message=>sub{
\&            my ($client,$msg)=@_;
\&            $msg\->reply($msg\->content); #XXXXXXXXXXXXXX
\&            #XXXXXX$msg\->dump() XXXXXXX
\&        });
\&
\&        #XXXXXXXXXX
\&
\&    });
\&
\&    #XXXXXXX
\&    $client\->run();
\&
\&    #runXXXXXXXXXXXXXXXXXXX
\&    #XXrunXXXXXXXXXXXXXXXXXXrunXXXXXXXXXXXXX
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0 Perl \s-1XXXXX\s0 Perldoc \s-1XXXXXXXXXXXIRCXXX\s0
.PP
\&\s-1XXXX\s0Weixin::Client\s-1XXXXXXXX\s0Mojolicious\s-1XXXXXXXXXXXXXXX\s0
.PP
\&\s-1XX\s0Mojo::Base\s-1XXXXXXXXXX\s0Mojo::EventEmitter\s-1XXXXXXXXXX\s0
.PP
\&\s-1XX\s0Mojo::UserAgent\s-1XXXXXXXXXHTTPXXXXX\s0Mojo::Log\s-1XXXXXXXXXX\s0 \s-1XX\s0
.PP
\&\s-1XXXXXXXXXXXXXXXXXX\s0Mojolicious
.SH "XXXX"
.IX Header "XXXX"
.Vb 10
\&    XXX Changes #XXXX
\&    XXX demo    #XXXXXX
\&    X\ \  XXX echo\-reply.pl     
\&    X\ \  XXX openwx\-client.pl
\&    XXX doc     #XXXX
\&    X\ \  XXX Weixin.pod
\&    XXX lib
\&    X\ \  XXX Mojo
\&    X\ \      XXX Weixin
\&    X\ \      X\ \  XXX Base.pm       #XXXXXX
\&    X\ \      X\ \  XXX Cache.pm      #XXXXXX
\&    X\ \      X\ \  XXX Client
\&    X\ \      X\ \  X\ \  XXX Cron.pm   #XXXXXX
\&    X\ \      X\ \  X\ \  XXX Remote
\&    X\ \      X\ \  X\ \      XXX _get_qrcode_image.pm  #XXXXXXXXXXXXXXXX
\&    X\ \      X\ \  X\ \      XXX _get_qrcode_uuid.pm   #XXXXXXXXXXXXXXuuid
\&    X\ \      X\ \  X\ \      XXX _is_need_login.pm     #XXXXXXXXXXXXXXXXX
\&    X\ \      X\ \  X\ \      XXX _login.pm             #XXXXXXXXX
\&    X\ \      X\ \  X\ \      XXX _logout.pm            #XXXXXXXXX
\&    X\ \      X\ \  X\ \      XXX _synccheck.pm         #XXXXXXXXXXXXXX
\&    X\ \      X\ \  X\ \      XXX _sync.pm              #XXXXXXXXXXX
\&    X\ \      X\ \  XXX Client.pm  #XXXXXXXXXXXXXXXXXXXX
\&    X\ \      X\ \  XXX Const.pm   #XXXX
\&    X\ \      X\ \  XXX Friend.pm  #XXXX
\&    X\ \      X\ \  XXX Group     
\&    X\ \      X\ \  X\ \  XXX Member.pm  #XXXXX
\&    X\ \      X\ \  XXX Group.pm   #XXX
\&    X\ \      X\ \  XXX Log.pm     #XXXXXXXXXXXXXX
\&    X\ \      X\ \  XXX Message
\&    X\ \      X\ \  X\ \  XXX Base.pm    #XXXX
\&    X\ \      X\ \  X\ \  XXX Handle.pm  #XXXXXXXXXXXX
\&    X\ \      X\ \  X\ \  XXX Queue.pm   #XXXX
\&    X\ \      X\ \  X\ \  XXX Remote 
\&    X\ \      X\ \  X\ \  X\ \  XXX _send_text_message.pm  #XXXXXXXXXXXXXXXXX
\&    X\ \      X\ \  X\ \  XXX SendStatus.pm  #XXXXXX
\&    X\ \      X\ \  XXX Message.pm #XXXX
\&    X\ \      X\ \  XXX Model
\&    X\ \      X\ \  X\ \  XXX Base.pm  #XXXXXXXXXXX
\&    X\ \      X\ \  X\ \  XXX Remote
\&    X\ \      X\ \  X\ \      XXX _webwxbatchgetcontact.pm #XXXXXXXXXXXXXXX
\&    X\ \      X\ \  X\ \      XXX _webwxgetcontact.pm      #XXXXXXXXXXXXXX
\&    X\ \      X\ \  X\ \      XXX _webwxinit.pm            #XXXXXXXXXXXXXXXXX
\&    X\ \      X\ \  XXX Model.pm  #XXXXXXXXXXXXXXXXXXXXX
\&    X\ \      X\ \  XXX Plugin       #XXXX
\&    X\ \      X\ \  X\ \  XXX FuckDaShen.pm
\&    X\ \      X\ \  X\ \  XXX IRCShell.pm
\&    X\ \      X\ \  X\ \  XXX KnowledgeBase.pm
\&    X\ \      X\ \  X\ \  XXX Openwx.pm
\&    X\ \      X\ \  X\ \  XXX Perlcode.pm
\&    X\ \      X\ \  X\ \  XXX Perldoc.pm
\&    X\ \      X\ \  X\ \  XXX PostQRcode.pm
\&    X\ \      X\ \  X\ \  XXX ShowMsg.pm
\&    X\ \      X\ \  X\ \  XXX SmartReply.pm
\&    X\ \      X\ \  X\ \  XXX Translation.pm
\&    X\ \      X\ \  XXX Plugin.pm #XXXXXXXXXXXXXXXXXX
\&    X\ \      X\ \  XXX Request.pm #HTTPXXXXXXXXXHTTP GET POSTXXXXXXXXXXX
\&    X\ \      X\ \  XXX Run.pm  #XXXXXXXXXXXXX
\&    X\ \      X\ \  XXX Server.pm #XXHTTPXXX
\&    X\ \      X\ \  XXX User.pm #XXXXXXXX
\&    X\ \      X\ \  XXX Util.pm #XXXXXX
\&    X\ \      XXX Weixin.pm #XXXXX
\&    X\ \      XXX Weixin.pod #XXXXXXdoc/Weixin.podXX
\&    XXX Makefile.PL  #XXXXXXMakefileXX
\&    XXX README.md    #READMEXXXmarkdownXX
\&    XXX screenshot   #XXXXXX
\&    X\ \  XXX IRCShell.jpg
\&    XXX t  #XXXX
\&        XXX https.t
\&        XXX load_module.t
.Ve
.SH "XXXXX"
.IX Header "XXXXX"
.SS "\s-1XXXXX\s0"
.IX Subsection "XXXXX"
\fI\s-1XXXXXXX\s0\fR
.IX Subsection "XXXXXXX"
.PP
.Vb 3
\&    $client\->log_level  #XXXXXX XXinfo
\&    $client\->log_path   #XXXXXXXXXundefXXXXSTDERR
\&    $client\->version    #XXXXX
\&
\&    #XXXXXXX
\&    $client\->log_level  #XXXXX "info"
\&
\&    #XXXXXXX
\&    $client\->log_level("debug");  #XXXXXlog_levelXXX debug
.Ve
.PP
\fI\s-1XXXXXXX\s0\fR
.IX Subsection "XXXXXXX"
.PP
new \s-1XXXXXXXXXXXX\s0
.IX Subsection "new XXXXXXXXXXXX"
.PP
.Vb 1
\&    $client = Mojo::Weixin\->new(http_debug=>0, log_level=>"info", );
\&
\&    #XXXXXX
\&
\&    account         #XXXXXXdefault, XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXcookieXX
\&    http_debug      #XXXXXXXXXXXX
\&    keep_cookie     #XXX1X0XXXXXXXcookieX1XXXXXXcookieXXXXXXXXXX
\&
\&    log_level       #XXXXXinfoXXXXXdebug|info|warn|error|fatal
\&    log_path        #XXXXXXXXXXXXSTDERR XXXXXXXXXXXXXXXXXXX
\&    log_unicode     #XXXXunicodeXXXXXXX0 XXX
\&    log_encoding    #XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&                    #XXXXX Encode XXXXXXXXXXutf8 gbkX
\&
\&    tmpdir          #XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&    cookie_path     #XXcookieXXXXXXXXX tmpdir/mojo_weixin_cookie_default.datXXXXXXXXXXXaccountX
\&    pic_dir         #XXXXXXXXXXXX tmpdir XXXXXXXX
\&
\&    qrcode_path     #XXXXXXXXXXX tmpdir XXXXXXXX
\&    emoji_to_text   #XXX1XXXXemojiXXXXXX "[XX]" XXXXX
\&                    #XXXXXXXXXXXXXXemojiXXXXXXXXXXXXXX0
\&    
\&    stop_with_mobile #XXX1XXXXXXXwebXXXXXXXXXXXXXXXXX0XXXXXXXXXXXXXXX
\&                     #XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&                     #XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&
\&    qrcode_count_max #XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&                     #XXXXXXXXXX qrcode_count_max XXXXXXXXXXX10X
.Ve
.PP
login \s-1XXXXX\s0
.IX Subsection "login XXXXX"
.PP
relogin \s-1XXXXXXX\s0
.IX Subsection "relogin XXXXXXX"
.PP
logout \s-1XXXXX\s0
.IX Subsection "logout XXXXX"
.PP
stop \s-1XXXXXXX\s0
.IX Subsection "stop XXXXXXX"
.PP
run \s-1XXXXXXX\s0
.IX Subsection "run XXXXXXX"
.PP
on \s-1XXXX\s0
.IX Subsection "on XXXX"
.PP
XXMojo::EventEmitterXXXXXXXXXXXXXXXXXXXXX
.PP
.Vb 1
\&    $client\->on("event1"=>sub{...},"event2"=>sub{...},);
.Ve
.PP
\&\s-1XXXXXXXXXXXX\s0
.PP
timer \s-1XXXX\s0
.IX Subsection "timer XXXX"
.PP
\&\s-1XXXXXXXXXXXXXXXX\s0
.PP
.Vb 1
\&    $client\->timer(10,sub{ print "hello world\en" }); #10sXXXhello world
.Ve
.PP
interval
.IX Subsection "interval"
.PP
\&\s-1XXXXXXXXXXXXXXXXXX\s0
.PP
.Vb 1
\&    $client\->interval(10,sub{ print "hello world\en" }); #XX10sXXXhello world
.Ve
.PP
add_job \s-1XXXXXX\s0
.IX Subsection "add_job XXXXXX"
.PP
.Vb 2
\&    #XXXXXXXX HH:MM X HH:MM:SS
\&    $client\->add_job("XXXX","07:00",sub{$client\->send_message($friend,"XXX");});
.Ve
.PP
spawn(%opt) \s-1XXXXXX\s0
.IX Subsection "spawn(%opt) XXXXXX"
.PP
\&\s-1XXXXXXXXXXXXXX\s0
.PP
XXXXXXXXXXXXXXXXXXXXXXXXXXXsystem/execXXXXXXXX
.PP
XXXXXXXXXXXXXXsleepX \s-1XXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
XXXXXXXXXXXXXXXXspawnXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
.PP
\&\s-1XXXXXXXXXXXXXXXX\s0
.PP
\&\s-1XXXXXXXX\s0Mojo::Run\s-1XX\s0 \s-1XXXXXXXXXXXXXXXX\s0
.PP
.Vb 9
\&    #XXXXXX
\&    is_blocking     #XXXXXXXXXXX0
\&    max_forks       #XXXXXXXX
\&    cmd             #XXXXXXXXX
\&    param           #XXXXX
\&    exec_timeout    #XXXXXXXXXXXX
\&    stdout_cb       #XXXXXXXXXX STDOUT XXXXXXXXXXXX
\&    stderr_cb       #XXXXXXXXXX STDERR XXXXXXXXXXXX
\&    exit_cb         #XXXXXXXXXXXX
\&
\&    XXXXX
\&    $client\->spawn(
\&        cmd => sub {print "hello world";return "ok"},
\&        exec_timeout => 3,
\&        exit_cb => sub{
\&            my($pid,$hash) = @_;
\&            #$pid XXXXXXXXX
\&            #$hashXXXXXXXXhashXXXXXXXX
\&            #{
\&            #    \*(Aqcmd\*(Aq                  => \*(AqCODE\*(Aq,              #XXXXXXXX
\&            #    \*(Aqtime_stopped\*(Aq         => \*(Aq1441011558.30559\*(Aq,  #XXXXXX
\&            #    \*(Aqtime_started\*(Aq         => \*(Aq1441011557.30242\*(Aq,  #XXXXXX
\&            #    \*(Aqtime_duration_total\*(Aq  => \*(Aq1.00345897674561\*(Aq,  #XXXXXXX
\&            #    \*(Aqtime_duration_exec\*(Aq   => \*(Aq1.00317192077637\*(Aq,  #XXXXXX
\&            #    \*(Aqis_timeout\*(Aq           => undef,               #XXXXXXX
\&            #    \*(Aqexit_status\*(Aq          => 1,                   #XXXXXXX
\&            #    \*(Aqexit_core\*(Aq            => 0,                   #XXXcore
\&            #    \*(Aqexit_signal\*(Aq          => 0,                   #XXXXXX
\&            #    \*(Aqparam\*(Aq                => undef,               #XXXXXXXXX
\&            #    \*(Aqstderr\*(Aq               => \*(Aq\*(Aq,                  #XXXXXXXXXXX
\&            #    \*(Aqstdout\*(Aq               => \*(Aqhello world\*(Aq,       #XXXXXXXXX
\&            #    \*(Aqresult\*(Aq               => [                    #XXXXXX
\&            #                                   \*(Aqok\*(Aq
\&            #                              ]
\&            #}
\&
\&        },
\&    );
\&
\&    $client\->spawn(
\&        cmd             => "ping www.qq.com", #XXXX [\*(Aqping\*(Aq,\*(Aqwww.qq.com\*(Aq]
\&        exec_timeout    => 3,
\&        stdout_cb       => sub{
\&            my($pid,$chunk) = @_;
\&            $client\->print("XXXXXXXXXXXX:",$chunk,"\en");
\&        },
\&        stderr_cb       => sub {
\&            my($pid,$chunk) = @_;
\&            $client\->print("XXXXXXXXXXXX:",$chunk,"\en");
\&        },
\&        exit_cb => sub{
\&            my($pid,$res) = @_;
\&            $client\->print("XXXXXXXXXXXXX:",$res\->{stdout},"\en");
\&            $client\->print("XXXXXXXXXXXXX:",$res\->{stderr},"\en");
\&        }
\&    );
.Ve
.PP
mail(%opt,[$callback]) \s-1XXXXXXX\s0
.IX Subsection "mail(%opt,[$callback]) XXXXXXX"
.PP
\&\s-1XXXXXXX\s0Mojo::SMTP::Client\s-1XXXXXXXXXXXXXXXXXXXX\s0Mojo::SMTP::Client\s-1XX\s0
.PP
.Vb 10
\&    XXXXXXXXXXXX
\&    smtp        #smtpXXXXXXXXsmtp.163.com
\&    port        #smtpXXXXXXXX25
\&    tls         #0|1 XXXXtlsXXXX 0
\&    tls_ca      #tlsXXXX
\&    tls_cert    #tlsXXXX
\&    tls_key     #tlsXXXX
\&    user        #smtpXX
\&    pass        #smtpXX
\&    from        #XXXX
\&    to          #XXXX
\&    cc          #XXXX
\&    subject     #XX
\&    html        #XXXXXXXhtmlXX
\&    text        #XXXXXXXXXXXX
\&    charset     #XXXXXXXXXXXXXXXUTF\-8
\&    data        #XXXXXXXXXMIME::LiteXXXXXXX
\&
\&    $client\->mail(smtp=>smtp.163.com,user=>xxx,pass=>xxx,from=>xxx,to=>xxx,subject=>"XXXX",text=>"hello world",sub{
\&        my ($send_status,$err) = @_;
\&        if($send_status){print "XXXX"}
\&        else{print "XXXX"}
\&    });
\&
\&    XXXXXXXXX
\&    my ($send_status,$err) = $client\->mail(...);
.Ve
.PP
http_get httpXXXXXXhttp getXX
.IX Subsection "http_get httpXXXXXXhttp getXX"
.PP
\&\s-1XXXX\s0Mojo::UserAgentXgetXXXXXXXXXXXXXMojo::UserAgent\->getXXXXXXXXXXX
.PP
XXhttpXXX
.PP
.Vb 2
\&    #XXXXX  XXhttpXXXXXXXXXXXXXXXXundef
\&    my $http_body = $client\->http_get($url,$header);
\&
\&    #XXXXXXXXhttpXXXXXX$ua,$tx
\&    my ($http_body,$ua,$tx) = $client\->http_get($url,$header);
\&
\&    #XXXhttp headerXXXXXXXXXXXXXXX
\&    #json=>1 XXXXXXjsonXXXXjson decodeXXperlXhashXX
\&    #retry_times=>3 XXXXXXXXXXXXXXXXX$client\->ua_retry_timesXX
\&    my $json_decode_hash = $client\->http_get($url,{json=>1,retry_times=>3,Host=>"www.qq.com"});
\&
\&    #http postXX
\&    $client\->http_post($url,$header,form=>$post_data);
.Ve
.PP
XXXhttpXXX
.PP
.Vb 4
\&    $client\->http_get($url,$header,sub{
\&        my($http_body,$ua,$tx) = @_;
\&        #XXXX $http_body XXundef
\&    });
.Ve
.PP
XXXXXXXXXXXXXXXXXXXXXXXXXXXXhttpXXXXXXXXXXXXhttpXXXXhttpXXXXXX
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
http_post XXXXXXhttp postXX
.IX Subsection "http_post XXXXXXhttp postXX"
.PP
X http_get \s-1XXXXXXXXX\s0
.PP
\fIsearch_friend()\fR \s-1XXXX\s0
.IX Subsection "search_friend() XXXX"
.PP
.Vb 3
\&    #XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&    my $friend = $client\->search_friend(name=>xxx,id=>xxx,);
\&    my @friends = $client\->search_friend(city=>"XX");
.Ve
.PP
\fIsearch_group()\fR  \s-1XXXX\s0
.IX Subsection "search_group()  XXXX"
.PP
.Vb 2
\&    #XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&    my $group = $client\->search_group(name=>xxx);
.Ve
.PP
\fIcreate_group()\fR  \s-1XXXX\s0
.IX Subsection "create_group()  XXXX"
.PP
.Vb 5
\&    #hashXX
\&    my $group = $client\->create_group({
\&        friends     =>  [ $friend1, $friend2, ... ], 
\&        displayname =>  "XX", #XXXXXXX
\&    });    
\&
\&    #XXXXXX
\&    my $group = $client\->create_group([ $friend1, $friend2, ... ], "XX",);
\&
\&    #XXXX
\&    my $grouup = $client\->create_group($friend1, $friend2, ...);
.Ve
.PP
send_message($friend|$group,$content,$callback) \s-1XXXXXX\s0
.IX Subsection "send_message($friend|$group,$content,$callback) XXXXXX"
.PP
.Vb 3
\&    #XXXXXXXXXXXXXX
\&    $client\->send_message($friend,"hello world"); #XXXXXXXXXXXX
\&    $friend\->send("hello world");                 #XXXXXXXXXXXXXXX
\&
\&    $client\->send_message($group,"hello world");  #XXXXXXXXXXXX
\&    $group\->send("hello world");                  #XXXXXXXXXXXXXX
\&
\&    #XXXXXXXXXXXXXXXXXXXXXXX
\&    $client\->send_message($friend,"hello world",sub{
\&        my($client,$msg) = @_;
\&        my $content = $msg\->content;
\&        $msg\->content($content . "XXXXXXX");
\&    });
.Ve
.PP
send_media($friend|$group,$media_path|$media_hash,$callback) \s-1XXXXXX\s0
.IX Subsection "send_media($friend|$group,$media_path|$media_hash,$callback) XXXXXX"
.PP
.Vb 3
\&    #XXXXXXXXXXXXXXX
\&    $client\->send_media($friend|$group,"/tmp/test.jpg");
\&    $client\->send_media($friend|$group,"/tmp/test.txt");
\&
\&    #XXurlXXXXX
\&    $client\->send_media($friend|$group,"http://www.example.com/test.jpg");
\&
\&    #XXXXXXXXXXXXXXXXXurlXXXXcontent\-typeXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&    #XXXXXXXXXXXXhashXXXXXXXXXXXXXXX
\&    $client\->send_media($friend|$group,{
\&        media_path => \*(Aq/tmp/hello.txt\*(Aq, #XXXXXXXXXXXXXXXXhttpXXXurl
\&        media_data => \*(Aqhello world\*(Aq,    #XXXXXXXXXXXXXXXXXXX media_pathX
\&        media_mime => \*(Aqtext/plain\*(Aq,     #XXXXXX application/octet\-streamXXXXX
\&        media_mtime => 1457169652 ,     #XXXXXXXXXXXXX
\&        media_ext  => \*(Aqtxt\*(Aq,            #XXXXX
\&        media_size => 1024,             #XXXXXXXXXXXXXXX
\&        media_name => \*(Aqhello.txt\*(Aq,      #XXXXXXXXXXXXXXXXXXX
\&    });
.Ve
.PP
reply_message($msg,$content,[$callback]) \s-1XXXXXXXXXX\s0
.IX Subsection "reply_message($msg,$content,[$callback]) XXXXXXXXXX"
.PP
.Vb 2
\&    #XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&    $client\->reply_message($msg,$content);
.Ve
.PP
reply_media_message($msg,$media,[$callback]) \s-1XXXXXXXXXX\s0
.IX Subsection "reply_media_message($msg,$media,[$callback]) XXXXXXXXXX"
.PP
.Vb 3
\&    #XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&    $client\->reply_media_message($msg,\*(Aqhttp://www.baidu.com/test.jpg\*(Aq);
\&    $client\->reply_media_message($msg,\*(Aq/tmp/test.jpg\*(Aq);
.Ve
.PP
accept_friend_request($id,$displayname,$ticket) \s-1XXXXXXXX\s0
.IX Subsection "accept_friend_request($id,$displayname,$ticket) XXXXXXXX"
.PP
.Vb 5
\&    #XXXXXX friend_request XX
\&    $client\->on(friend_request=>sub{
\&        my($client,$id,$displayname,$verify,$ticket) = @_;
\&        $client\->accept_friend_request($id,$displayname,$ticket);
\&    });
.Ve
.SS "\s-1XXXX\s0"
.IX Subsection "XXXX"
.Vb 10
\&    XXX
\&    id          #XXXXXXXXXXXXXXXXXXXXXXX
\&    name        #XX
\&    account       #XX
\&    province    #XX
\&    city        #XX
\&    sex         #XX
\&    signature   #XXXX
\&    displayname #XXXXXXnameXX
\&    markname    #XXXX
\&
\&    XXX
\&    dump        #XXXXXX
\&    get_avatar  #XXXXXX
\&    
\&    XXXXXXXXXX $client\->user XXXXXXXX
\&
\&    $client\->user\->name;   #XXXXXX
\&    $client\->user\->dump(); 
\&    $client\->get_avatar(sub{
\&        my($path,$data,$mime) = @_; #XXXXXXXXXXXXXXXXXXXXXXXContent\-Type
\&    });
.Ve
.SS "\s-1XXXX\s0"
.IX Subsection "XXXX"
.Vb 10
\&    XXX
\&    id          #XXXXXXXXXXXXXXXXXXXXXXX
\&    name        #XX
\&    account     #XX
\&    province    #XX
\&    city        #XX
\&    sex         #XX
\&    signature   #XXXX
\&    displayname #XXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&    markname    #XXXX
\&
\&    XXX
\&    dump        #XXXXXX
\&    send        #XXXXXXXX
\&    send_media  #XXXX
\&    set_markname #XXXXXX
\&    get_avatar  #XXXXXX
\&
\&    my $friend = $client\->search_friend(name=>"XX");
\&    $friend\->dump();
\&    $friend\->send("hello world"); 
\&    $friend\->set_markname("XX");
\&    $friend\->get_avatar(sub{
\&        my($path,$data,$mime) = @_; #XXXXXXXXXXXXXXXXXXXXXXXContent\-Type
\&    });
.Ve
.SS "\s-1XXXX\s0"
.IX Subsection "XXXX"
.Vb 4
\&    XXX
\&    id           #XXXXXXXXXXXXXXXXXXXXXXX
\&    name         #XXX
\&    displayname  #XXXXX
\&
\&    XXX
\&    search_group_member  #XXXXX
\&    me                   #XXXXXXXXXXX
\&    send                 #XXXXXXX
\&    send_media           #XXXX
\&    dump                 #XXXXXXX
\&    members              #XXXXXXXXXXXX
\&    invite_friend        #XXXXXX
\&    kick_group_member    #XXXXX
\&    set_displayname      #XXXXXXXX
\&    get_avatar           #XXXXXX
\&
\&    my $group = $client\->search_group(displayname=>"XXX");
\&    $group\->send("XXX");
\&    print "XXXXXXXXX" . $group\->me\->displayname;
\&
\&    $group\->invite_friend($friend1,$friend2,...);
\&    $group\->kick_group_member($member);
\&    $group\->set_displayname("XX");
\&    $group\->get_avatar(sub{
\&        my($path,$data,$mime) = @_; #XXXXXXXXXXXXXXXXXXXXXXXContent\-Type
\&    });
.Ve
.SS "\s-1XXXXX\s0"
.IX Subsection "XXXXX"
.Vb 10
\&    XX:
\&    id              #XXXXXXXXXXXXXXXXXXXXXXX
\&    name            #XX
\&    account         #XXX
\&    province        #XX
\&    city            #XX
\&    sex             #XX
\&    signature       #XXXX
\&    displayname     #XXXXXXXXXXX
\&    markname        #XXXX
\&
\&    XX:
\&    dump            #XXXXXX
\&    group           #XXXXXXXXXXXX
\&    make_friend     #XXXXXX
\&    get_avatar      #XXXXXX
\&
\&    my $group = $client\->search_group(displayname=>"XXX");
\&    my $group_member = $group\->search_group_member(displayname=>"XX");
\&    $group_member\->dump;
\&    $group_member\->group\->displayname;
\&    $group_member\->make_friend("XXXXXXXX");
\&    $group_member\->get_avatar(sub{
\&        my($path,$data,$mime) = @_; #XXXXXXXXXXXXXXXXXXXXXXXContent\-Type
\&    });
.Ve
.SS "\s-1XXXX\s0"
.IX Subsection "XXXX"
.Vb 9
\&    XXX
\&    id          #XXid
\&    type        #XXXX friend_message|group_message|group_notice XXXXXXXXXXXXXXX
\&    class       #XXXX send|recv XXXXXXXXX
\&    time        #XXXXXXXXXX
\&    ttl         #XXXXXttlXXXX5XXttlX0 XXXXXXXX
\&    cb          #XXXXXXXXXXXXXXXXXXXXXXXX
\&    content     #XXXX
\&    format      #XXXXXXX text|media|app XX
\&
\&    sender_id   #XXXXXXXXXid
\&    receiver_id #XXXXXXXid
\&    group_id    #XXXXXXXid
\&    
\&    #XXXXXXXXX
\&    media_id    #XXid
\&    media_type  #XXXX image|voice|video|emoticon
\&    media_code  #XXXXXX
\&    media_mime  #XXXXXMIMEXXX image/jpg
\&    media_name  #XXXXXX
\&    media_size  #XXXXXX
\&    media_data  #XXXXXXXXXXX
\&    media_mtime #XXXXXXXXX
\&    media_ext   #XXXXXXXX
\&    media_path  #XXXXXXXXX
\&
\&    #XXXXXXXXXXX
\&    app_id      #XXid
\&    app_title   #XXXX
\&    app_url     #XXXX
\&    app_name    #XXXX
\&    app_desc    #XXXX
\&
\&    XXX
\&    sender      #XXXXXXXX
\&    receiver    #XXXXXXX
\&    group       #XXXXXXXXX
\&    reply       #XXXXXXXXX
\&    reply_media #XXXXXXXXX
\&
\&    #XXXXXXX XXXreceive_messageXX
\&    #XXreceive_messageXXXXXXXXX
\&    $client\->on(receive_message=>sub{
\&        my($client,$msg) =  @_; 
\&        if($msg\->type eq "friend_message"){#XXXXXXX
\&            my $friend = $msg\->sender; #XXXXXXXX
\&            print "XXXXX" . $friend\->displayname . "XXXXXXXXXXXXXXXX" . $msg\->content;
\&        }
\&        elsif($msg\->type eq "group_message"){#XXXXXX
\&            my $group = $msg\->group;    #XXXXXXXXXXXX
\&            my $sender = $msg\->sender;  #XXXXXXXXXXXXXX
\&
\&            print $sender\->displayname . "XXX", $group\->displayname . "XXXXXXXXXXXXXXX" . $msg\->content;
\&        }
\&        elsif($msg\->type eq "group_notice"){
\&            my $group = $msg\->group;    #XXXXXXXXXXXX
\&            print "XXX", $group\->displayname . "XXXXXXXXXXXXXXXXXXX" . $msg\->content;
\&        }
\&    
\&        $msg\->reply("XXXXX"); #XXXXX(XXXX)
\&        $msg\->reply_media("http://www.baidu.com/test.jpg"); #XXXXXXX(urlXX)
\&        $msg\->reply_media("/tmp/test.jpg"); #XXXXXXX(XXXXXX)
\&    });
.Ve
.SH "XX"
.IX Header "XX"
.SS "receive_message \s-1XXXXX\s0"
.IX Subsection "receive_message XXXXX"
.Vb 4
\&    $client\->on(receive_message=>sub{
\&        my($client,$msg) = @_;  #XXXXXXXXXXXXXXXX
\&        ...;
\&    });
.Ve
.SS "receive_media \s-1XXXXXXXXXX\s0"
.IX Subsection "receive_media XXXXXXXXXX"
.Vb 7
\&    $client\->on(receive_media=>sub{
\&        my($client,$path,$data,$msg) = @_;
\&        # $path XXXXXXX
\&        # $data XXXXXXXXXX
\&        # $msg  XXXXXXXXX
\&        ...;
\&    });
.Ve
.SS "send_message \s-1XXXXXX\s0"
.IX Subsection "send_message XXXXXX"
.Vb 9
\&    $client\->on(send_message=>sub{
\&        my($client,$msg,$status) = @_; #XXXXXXXXXXXXX XXXX X XXXXXX
\&        if($status\->is_success){
\&            print "XX" . $msg\->id . "XXXX\en";
\&        }
\&        else{
\&            print "XX" . $msg\->id . "XXXXXXXXXX" . $status\->info . "\en";
\&        }
\&    });
.Ve
.SS "input_qrcode \s-1XXXXXXX\s0"
.IX Subsection "input_qrcode XXXXXXX"
.Vb 4
\&    $client\->on(input_qrcode=>sub{
\&        my($client,$qrcode_path) = @_; #XXXXXXXXXXXXXXXX
\&        ...;
\&    });
.Ve
.SS "login \s-1XXXXXXX\s0"
.IX Subsection "login XXXXXXX"
.Vb 5
\&    $client\->on(login=>sub{
\&        my($client,$is_scann) = @_;
\&        # $is_scann XX1XXXXXXXXXXXXXXXXXXXXXXidXXXXXX
\&        #           XX0XXXXXXXXXXXXXXXXXXXXXXXidXXXXXXX
\&    });
.Ve
.SS "ready \s-1XXXXXXX\s0"
.IX Subsection "ready XXXXXXX"
.Vb 4
\&    $client\->on(input_qrcode=>sub{
\&        my($client,) = @_;
\&        ...;
\&    });
.Ve
.SS "group_property_change \s-1XXXXXX\s0"
.IX Subsection "group_property_change XXXXXX"
.Vb 3
\&    $client\->on(group_property_change=>sub{
\&        my($client,$group,$property,$old_value,$new_value)=@_;
\&    });
.Ve
.SS "group_member_property_change \s-1XXXXXXX\s0"
.IX Subsection "group_member_property_change XXXXXXX"
.Vb 3
\&    $client\->on(group_member_property_change=>sub{
\&        my($client,$member,$property,$old_value,$new_value)=@_;
\&    });
.Ve
.SS "friend_property_change \s-1XXXXXX\s0"
.IX Subsection "friend_property_change XXXXXX"
.Vb 3
\&    $client\->on(friend_property_change=>sub{
\&        my($client,$friend,$property,$old_value,$new_value)=@_;
\&    });
.Ve
.SS "user_property_change \s-1XXXXXX\s0"
.IX Subsection "user_property_change XXXXXX"
.Vb 3
\&    $client\->on(user_property_change=>sub{
\&        my($client,$user,$property,$old_value,$new_value)=@_;
\&    });
.Ve
.SS "new_group_member \s-1XXXXX\s0"
.IX Subsection "new_group_member XXXXX"
.Vb 1
\&    $client\->on(new_group_member=>sub{my ($client,$member,$group)=@_});
.Ve
.SS "new_friend  \s-1XXXX\s0"
.IX Subsection "new_friend  XXXX"
.Vb 1
\&    $client\->on(new_friend=>sub{my ($client,$friend)=@_});
.Ve
.SS "new_group \s-1XXXX\s0"
.IX Subsection "new_group XXXX"
.Vb 1
\&    $client\->on(new_group=>sub{my ($client,$group)=@_});
.Ve
.SS "lose_friend \s-1XXXX\s0"
.IX Subsection "lose_friend XXXX"
.Vb 1
\&    $client\->on(lose_friend=>sub{my ($client,$friend)=@_});
.Ve
.SS "lose_group \s-1XXXX\s0"
.IX Subsection "lose_group XXXX"
.Vb 1
\&    $client\->on(lose_group=>sub{my ($client,$group)=@_});
.Ve
.SS "lose_group_member \s-1XXXXXX\s0"
.IX Subsection "lose_group_member XXXXXX"
.Vb 1
\&    $client\->on(lose_group_member=>sub{my ($client,$member,$group)=@_});
.Ve
.SS "friend_request \s-1XXXXXX\s0"
.IX Subsection "friend_request XXXXXX"
.Vb 7
\&    $client\->on(friend_request=>sub{
\&        my ($client,$id,$displayname,$verify,$ticket) = @_;
\&        # $id           XXXXXXXXXXXid
\&        # $displayname  XXXXXXXXXXXXX
\&        # $verify       XXXXXXXXXXXXX
\&        # $ticket       ticketXXXXXXXXXXXXXXXX accept_friend_request XX
\&    });
.Ve
.SH "XXXX"
.IX Header "XXXX"
.SS "load"
.IX Subsection "load"
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX:\s0
.PP
.Vb 4
\&    priority        #XXXXXXXXXXXXXX0XXXXXXXXXXXXXXXXX
\&    auto_call       #XXXXXXXXXXXXXXXXXXXX1
\&    call_on_load    #XXXXXXXXXXXXXXXX0
\&    data            #XXXXXXXXXXXXXXXXXXXXXcallXXXXXXXXXX
\&
\&    $client\->load(["plugin1","plugin2"],data=>[1,2,3,]);
\&    $client\->load("plugin",priority=>0,auto_call=>1);
.Ve
.PP
XXXXXXXXXXauto_callXXXXXXXXXXXXrunXXXXXXXXpriorityXXXXXXXXXXXX
.PP
\&\s-1XXXXXXXXXXXXXXXXXXX\s0
.SS "call"
.IX Subsection "call"
XXXXXXXXXXXauto_call=>0XXXXXXXXXXXXauto_call=>1XXXXXXXcall
.PP
.Vb 1
\&    $client\->call("plugin",[XXXX]);
.Ve
.PP
XXXXXXXXXXXXXXXXXXXXXXXXXXcallXXXXXXXXMojo:Weixin::Plugin::
.PP
XXXXXXXXXXXhello worldXXXXXXXXXXXXXXXXXXX\*(L"hello world\*(R"
.PP
\&\s-1XXXXX\s0 Mojo:Weixin::Plugin::HelloWorld
.PP
.Vb 12
\&    package Mojo:Weixin::Plugin::HelloWorld;
\&    our $PRIORITY = 10; #XXXXXXXloadXXXpriorityXXXXXXXXXXXXXXXX
\&    our $AUTO_CALL = 1; #XXXXXXXXXXXXXXXXXXXXXXXX
\&    sub call{
\&        my $client = shift;
\&        my $data   = shift; #XXXXXdataXX
\&        $client\->on(receive_message=>sub{
\&            my($client,$msg)=@_;
\&            $client\->reply_message($msg,"hello world");
\&        });
\&    }
\&    1;
.Ve
.PP
\&\s-1XXXXXXXXXXXXXX\s0
.PP
.Vb 3
\&    #XXXXXXXXMojo::Weixin::Plugin::XXXXXXXXXXXXXXXX"+"XXXXXXXX
\&    $client\->load("HelloWorld");
\&    $client\->run();
.Ve
.PP
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXhello world
.PP
\&\s-1XXX\s0
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXreceive_messageXXXXXXXXXXXXXXXXX
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
XXXXXXXXXXX$msg\->\fIallow_plugin\fR\|(0) XXXXXXXXXXXXXXXXXXXXXXXXallow_pluginXXX
.PP
\&\s-1XXXXXXXXXXXXXXXXXXX\s0
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.SH "XXXX"
.IX Header "XXXX"
.SS "Mojo::Weixin::Plugin::ShowMsg"
.IX Subsection "Mojo::Weixin::Plugin::ShowMsg"
\&\s-1XXXXXXX\s0
.PP
.Vb 1
\&    $client\->load("ShowMsg");
.Ve
.SS "Mojo::Weixin::Plugin::ImageStore"
.IX Subsection "Mojo::Weixin::Plugin::ImageStore"
\&\s-1XXXXXXXXXXXXXXX\s0
.PP
.Vb 2
\&    my $client = Mojo::Weixin\->new(media_dir=>"/home/test");
\&    $client\->load("ShowMsg");
\&
\&    XXXXX:
\&    /home/test/20150505/20150505123456.jpg
\&    /home/test/20150505/20150505124356.jpg
.Ve
.SS "Mojo::Weixin::Plugin::AutoVerify"
.IX Subsection "Mojo::Weixin::Plugin::AutoVerify"
\&\s-1XXXXXXXXXXXXXXX\s0
.PP
.Vb 1
\&    $client\->load("AutoVerify");
.Ve
.SS "Mojo::Weixin::Plugin::IRCShell"
.IX Subsection "Mojo::Weixin::Plugin::IRCShell"
XXXXXXXXircXXXXXXXXXXircXXXXXXXXircXXXXirc userXXXXXXXXXXXXXXXXircXXXXXXX
.PP
\&\s-1XXXXXX\s0 Mojo::IRC::Server::Chinese
.PP
.Vb 12
\&    $client\->load("IRCShell",data=>{
\&        listen=>[ {host=>"127.0.0.1",port=>6667},], #XXXIRCXXXXXXXX+XXXXX0.0.0.0:6667
\&        load_friend => 1, #XXX0 XXXXXXXXXXXircXXXXXXXXX #XXXX
\&    });
\&    #XXXXXXXX
\&    listen              #XXXXXXXXXXXXXXXXXXXXX
\&                        # listen=>[ {host=>"127.0.0.1",port=>6667}, {host=>"127.0.0.1",port=>6668}]
\&                        # XXXX127.0.0.1:6667X 127.0.0.1:6668XXXX
\&    master_irc_user     #XqqXXXirc userXXXXXXXXqqXXXXuserXXXXXipXXXXXXXXXXX
\&    load_friend         #0|1 XXX0 XXXXXXXXXXXircXXXXXXXXX #XXXX
\&    image_api           #XXelimageXXapiXXXXqqXXXXXXXXXXircXXXXXXXXXXXX
\&                        #XXXXXelimage http://img.vim\-cn.com/
.Ve
.PP
XXXXXXXXXXircX '#XXXX' \s-1XXX\s0
.PP
XXXXXXXXircXXXXXXXXXXXXXX[\s-1PERLXXXX\s0]XXXircXXX'#PERLXXXX'
.PP
XXXXXircXXXXXXXXX,XXXXXircXXXXXXXXXXXXXXX
.PP
XXXXXXXXXLinuxXXXXXXXXircXXX
.SS "Mojo::Weixin::Plugin::Perldoc"
.IX Subsection "Mojo::Weixin::Plugin::Perldoc"
XXXXXXXXXXperldocXXXXXperldoc \-f|\-v xxx
.PP
.Vb 2
\&    $client\->load("Perldoc");
\&    #XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX0
.Ve
.SS "Mojo::Weixin::Plugin::Perlcode"
.IX Subsection "Mojo::Weixin::Plugin::Perlcode"
XXXXXXXXPerlXXXXXXXlinuxXXXXX
.PP
.Vb 2
\&    $client\->load("Perlcode");
\&    #XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX0
.Ve
.PP
\&\s-1XXXXXXXX\s0 >>> \s-1XXXXXX\s0
.PP
.Vb 1
\&    >>> print "hello world";
.Ve
.SS "Mojo::Weixin::Plugin::UploadQRcode"
.IX Subsection "Mojo::Weixin::Plugin::UploadQRcode"
XXXXXXXXXXXXXXXXXXXXXXXXXXXurlXX
.PP
.Vb 1
\&    $client\->load("UploadQRcode");
.Ve
.SS "Mojo::Weixin::Plugin::ShowQRcode"
.IX Subsection "Mojo::Weixin::Plugin::ShowQRcode"
XXXXXXXXXXXXXXXXXXXXXwinX
.PP
.Vb 1
\&    $client\->load("ShowQRcode");
.Ve
.SS "Mojo::Weixin::Plugin::ShowQRCodeInTerm"
.IX Subsection "Mojo::Weixin::Plugin::ShowQRCodeInTerm"
LinuxXXXXXXXXXXXXXXXX hyvinlam <https://github.com/hyvinlam>
.PP
.Vb 1
\&    $client\->load("ShowQRCodeInTerm");
.Ve
.SS "Mojo::Weixin::Plugin::PostQRcode"
.IX Subsection "Mojo::Weixin::Plugin::PostQRcode"
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
\&\s-1XXX\s0 \s-1XXXXXXXXXXXXXXX\s0 Mojo::SMTP::Client MIME::Lite\s-1XXXXXXX\s0
.PP
.Vb 11
\&    $client\->load("PostQRcode",data=>{
\&        smtp    =>  \*(Aqxxxx\*(Aq, #XXXsmtpXX
\&        port    =>  \*(Aqxxxx\*(Aq, #smtpXXXXXXXX25
\&        from    =>  \*(Aqxxxx\*(Aq, #XXX
\&        to      =>  \*(Aqxxxx\*(Aq, #XXX
\&        user    =>  \*(Aqxxxx\*(Aq, #smtpXXXX
\&        pass    =>  \*(Aqxxxx\*(Aq, #smtpXXXX
\&        tls     =>  0,      #XXXXXXXSMTPSXXXXXX0                            
\&                            #XXXXXXXXXXXXXXXXXX465XXXXXXXXXXXX1
\&    });
\&    ...;
\&
\&    XXXXXXXXXX
\&
\&    XXXXXXX xxxx XXXXX
\&    XXXweixin_qrcode_xxxx.png
\&    XXXXXXXXXXXXXXXXXXX
.Ve
.SS "Mojo::Weixin::Plugin::Beauty"
.IX Subsection "Mojo::Weixin::Plugin::Beauty"
\&\s-1XXXXXXXXXXXXXX\s0\*(L"\s-1XXX\s0\*(R"\s-1XXXXXXXXXXXX\s0
.PP
.Vb 2
\&    #XXXXXXX
\&    $client\->load("Beauty"); 
\&
\&    #XXXXXXXXXXXXXXXXXX
\&    $client\->load("Beauty",data=>{
\&        file => \*(Aq./Beauty.dat\*(Aq, #XXXXXXXXXXXXXXXXX
\&        board=>[
\&            {command=>"XXX", url=>\*(Aqhttp://huaban.com/boards/19570858/\*(Aq},
\&            {command=>"XX"  , url=>\*(Aqhttp://huaban.com/boards/28226262/\*(Aq},
\&            {command=>"XXX", url=>\*(Aqhttp://huaban.com/boards/27865046/\*(Aq},
\&        ]
\&    });
.Ve
.SS "Mojo::Webqq::Plugin::Riddle"
.IX Subsection "Mojo::Webqq::Plugin::Riddle"
\&\s-1XXXXXXXXXXXX\s0 limengyu1990 <https://github.com/limengyu1990>
.PP
.Vb 1
\&    $client\->load("Riddle");
\&    
\&    $client\->load("Riddle",data=>{
\&        command     => "XX",   #XXXXXXXX
\&        apikey      => "xxxx",   #XXXXX http://apistore.baidu.com/apiworks/servicedetail/440.html?qq\-pf\-to=pcqq.c2c
\&        timeout     => 30, #XXXXXXXXXXXXXXXXXXXX
\&    });
.Ve
.SS "Mojo::Weixin::Plugin::Translation"
.IX Subsection "Mojo::Weixin::Plugin::Translation"
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
.Vb 3
\&    XX hello
\&    XX XX
\&    XX XXXXX
.Ve
.SS "Mojo::Weixin::Plugin::Weather"
.IX Subsection "Mojo::Weixin::Plugin::Weather"
\&\s-1XXXXXXXX\s0\*(L"\s-1XXXX\s0\*(R"\s-1XXXXXXXX\s0 \s-1XX\s0 autodataming <https://github.com/autodataming>
.PP
.Vb 1
\&    $client\->load("Weather");
.Ve
.SS "Mojo::Weixin::Plugin::XiaoiceReply"
.IX Subsection "Mojo::Weixin::Plugin::XiaoiceReply"
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
.Vb 6
\&    $client\->load("XiaoiceReply");
\&    $client\->load("XiaoiceReply",data=>{
\&        is_need_at  => 1,           #XXXXXXXXXXXXXXXXX
\&        comamnd_on  => "XXXX",  #XXXXXXXXXXXXXXXXXXXXXXX/XXXXXXXX
\&        comamnd_off => "XXXX",  #XXXXXXXXXXXXXXXXXXXXXXX/XXXXXXXX
\&    });
.Ve
.SS "Mojo::Weixin::Plugin::SmartReply"
.IX Subsection "Mojo::Weixin::Plugin::SmartReply"
\&\s-1XXXXXXXXXXXXXXXXXXXXX\s0
.PP
\&\s-1XXXXXXXXXXXXXXXXXXX\s0 \f(CW@XXXX\fR \s-1XXX\s0
.PP
.Vb 1
\&    $client\->load("SmartReply");
.Ve
.SS "Mojo::Weixin::Plugin::KnowledgeBase"
.IX Subsection "Mojo::Weixin::Plugin::KnowledgeBase"
\&\s-1XXQQXXXXXXXXXX\s0
.PP
.Vb 1
\&    $client\->load("KnowledgeBase");
.Ve
.PP
\&\s-1XXXXX\s0 \s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0 \s-1XXX\s0
.PP
.Vb 4
\&    learn XXXXXXX  XXXX
\&    XX  "XXXX"      XXXX
\&    learn \*(AqXX XXX\*(Aq   "XXXX"
\&    learn* "XXXX"      XXXX XXXXXX*XXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&
\&    del   XXXXXXX
\&    XX  \*(AqXX XXX\*(Aq
\&    del*  XXXXXXX  XXXXXXXXX
.Ve
.PP
\&\s-1XXXXXXXX\s0
.PP
.Vb 10
\&    $client\->load("KnowledgeBase",data=>{
\&        allow_group => ["PERLXXXX"],  #XXXXXXXXXXXXXXXXXXXX
\&        ban_group   => ["XXX1","XXX2"], #XXXXXXXXXXXXXXXXXXXXX
\&        file => \*(Aq./KnowledgeBase.dat\*(Aq, #XXXXXXX
\&        learn_command  => \*(Aqlearn\*(Aq,     #XXXXXXXXXX
\&        delete_command =>\*(Aqdel\*(Aq,      #XXXXXXXXXX
\&        learn_operator => ["XX","XX"], #XXXXXXXXXXqqX
\&        delete_operator => ["XX"], #XXXXXXXXXXqqX
\&        mode => \*(Aqfuzzy\*(Aq, # fuzzy|regex|exact XXXXXX|XX|XX, XXXX
\&    });
.Ve
.SS "Mojo::Weixin::Plugin::KnowledgeBase2"
.IX Subsection "Mojo::Weixin::Plugin::KnowledgeBase2"
XXXXXKnowledgeBaseXXXXXXXXXXXXX
.PP
1XXXXXXXXXXXXXXXXXXXXXX
.PP
\&\s-1XXXXXXXX\s0)  #  \s-1XXXXXXXXXXXXX\s0 #  \s-1XXXX\s0
.PP
\&\s-1XXXXXXXXXXXXX\s0
.PP
.Vb 8
\&    _\|_XX_\|_         #   XX                      # XXXXX
\&    _\|_XXXX_\|_     #   XX                      # XXX
\&    XXXX1        #   XXXXXXX            # XXX\enXXXX X\enXXXXX
\&    XXXX1        #   XXXXXXX            # XXX
\&    XXXX1        #   XXXXXXX            # XXXX XXXXXXXXXXXXXXXXXXXXXXX
\&    XXXX2        #   ^XX(\e?|)$               # XXXXX
\&    XXXX2        #   X(X|X)                 # XXXXX
\&    XXXX3        #   XXXXXXX            # XXXXX\e# XXX XXXXXXX
.Ve
.PP
2XXXXXXXXXXXXXXXXXXXXXXcheck_timeXXXXXXXXXXXX
.PP
.Vb 12
\&    $client\->load("KnowledgeBase2",data=>{
\&        allow_group => ["PERLXXXX"],  #XXXXXXXXXXXXXXXXXXXX
\&        ban_group   => ["XXX1","XXX2"], #XXXXXXXXXXXXXXXXXXXXX
\&        file => \*(Aq./KnowledgeBase2.txt\*(Aq, #XXXXXXXXXXXXXXXXXX
\&        learn_command  => \*(Aqlearn\*(Aq,     #XXXXXXXXXXXXX
\&        delete_command =>\*(Aqdel\*(Aq,      #XXXXXXXXXXXXX
\&        learn_operator => ["XX","XX"], #XXXXXXXXXXXXXX
\&        delete_operator => ["XX"], #XXXXXXXXXXXXXX
\&        mode => \*(Aqfuzzy\*(Aq, # fuzzy|regex|exact XXXXXX|XX|XX, XXXX
\&        check_time => 10, #XX10XXXXXXXXX
\&        show_keyword => 1, #XXXXXXXXXXXXXXXXX0
\&    });
.Ve
.SS "Mojo::Weixin::Plugin::Openwx"
.IX Subsection "Mojo::Weixin::Plugin::Openwx"
\&\s-1XXHTTP\s0 \s-1APIXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
.Vb 7
\&    #ataXXXHASHXX
\&    $client\->load("Openwx",data=>{
\&        listen => [ {host=>"127.0.0.1",port=>3000}, ] , #XXXXXXXXXXXXXXXXXX0.0.0.0:3000
\&        auth   => sub {my($param,$controller) = @_},    #XXXXXXXXXXXXXXXXXX
\&        post_api => \*(Aqhttp://xxxx\*(Aq,                      #XXXXXXXXXXXXXXXX
\&        post_event => 1,                                #XXXXXXXXXXXXXXXXXXXXXX0
\&    });
\&
\&    #XdataXXXXauthXXXXXXXXapiXXXXXX
\&    #XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX403
\&
\&    #XXXXXXXXXXXXXXXHASHXXXXXgetXpostXXXXXXX
\&    #XXXXXXXXMojoliciousXcontrollerXXXXXXMojoliciousXXXXXXXXXXXcontrollerXXXXXXXXX
\&
\&    #authXXXXX
\&
\&    #XXXXXXXXXXX
\&    #http://127.0.0.1:3000/openwx/send_message?id=xxxx&content=xxxx&key=xxxx&exp=xxxx
\&    sub {
\&        my $param = shift;
\&        my $secret = \*(Aqthis is your secret key\*(Aq;
\&        return 0 if time() >= $param\->{exp}; #XXXXexpXXXXXXXXXXXXXXXXX
\&        if($param\->{key} eq md5_sum($secret . join "",@$param{qw(id gid did content exp)} )){
\&            return 1; #secretXXXXXXXXXXXXXXXXXmd5 XXXXkeyXXXXXX
\&        }
\&        else{
\&            return 0;
\&        }
\&    }
\&
\&    #XXcontrollerXXXXXIPXXXXXXXXXcontrollerXXXXXXXX Mojolicious::Controller
\&    sub{
\&        my ($param,$controller) = @_;
\&        if($controller\->tx\->remote_address eq "127.0.0.1"){
\&            return 1;
\&        }
\&        return 0;
\&    }
\&
\&    #XXXXXXXXXXX
\&    $client\->load("Openwx",data=>{
\&        listen => [{host=>xxx,port=>xxx}],
\&        post_api=> \*(Aqhttp://127.0.0.1:4000/post_api\*(Aq,
\&        post_event => 1, 
\&    });
\&
\&    #XXXXXXXXXXXXHTTP POSTXXXXXXjsonXXXXXXXXhttp://127.0.0.1:4000/post_api
\&
\&    XXXXXXXXXXXX
\&
\&    connect to 127.0.0.1 port 4000
\&    POST /post_api
\&    Accept: */*
\&    Content\-Length: xxx
\&    Content\-Type: application/json
\&
\&    {   "receiver":"XX",
\&        "time":"1442542632",
\&        "content":"XXXX",
\&        "class":"recv",
\&        "sender_id":"@2372835507",
\&        "receiver_id":"@4072574066",
\&        "group":"PERLXXXX",
\&        "group_id":"@@2617047292",
\&        "sender":"XX",
\&        "id":"10856",
\&        "type":"group_message",
\&        "post_type": "receive_message"
\&    }
\&
\&    XXXXXXX
\&    
\&    connect to 127.0.0.1 port 4000
\&    POST /post_api
\&    Accept: */*
\&    Content\-Length: xxx
\&    Content\-Type: application/json
\&
\&    {   "receiver":"XX",
\&        "time":"1442542632",
\&        "content":"XXXXXXXXXXX",
\&        "class":"recv",
\&        "receiver_id":"@4072574066",
\&        "group":"PERLXXXX",
\&        "group_id":"@@2617047292",
\&        "id":"10856",
\&        "type":"group_notice",
\&        "format": "text",
\&        "post_type": "receive_message"
\&    }
\&    
\&    XXXXXXXXXXXXXXXXXXXXXXXX
\&
\&    XXXXXXXXJSONXXXXPOSTXXXX
\&
\&    connect to 127.0.0.1 port 4000
\&    POST /post_api
\&    Accept: */*
\&    Content\-Length: xxx
\&    Content\-Type: application/json
\&
\&    {   "receiver":"XX",
\&        "time":"1442542632",
\&        "content":"XXXX",
\&        "class":"send",
\&        "sender_id":"@2372835507",
\&        "receiver_id":"@4072574066",
\&        "group":"PERLXXXX",
\&        "group_id":"@@2617047292",
\&        "sender":"XX",
\&        "id":"10856",
\&        "type":"group_message",
\&        "format": "text",
\&        "post_type": "send_message"
\&    }
\&
\&    XXXXXX
\&
\&    {   "receiver":"XX",
\&        "time":"1442542632",
\&        "content":"[media](\e/tmp\e/mojo_weixin_media_Ja9l.jpg)",
\&        "media_path": "\e/tmp\e/mojo_weixin_media_Ja9l.jpg",
\&        "media_id": "2273934420223351581",
\&        "media_mime":"image\e/jpg",
\&        "media_name": "mojo_weixin_media_Ja9l.jpg",
\&        "media_size": "1234567",
\&        "media_mtime": "1462763788",
\&        "media_ext": "jpg",
\&        "media_data": "%87%60M%B4A%E1%EB%A0%13%E4%C4%5C2%C4%0B%DFV%B7%0B...", #XXXXXXXXXXXXXurl encodeXX
\&        "class":"recv",
\&        "sender_id":"@2372835507",
\&        "receiver_id":"@4072574066",
\&        "group":"PERLXXXX",
\&        "group_id":"@@2617047292",
\&        "sender":"XX",
\&        "id":"10856",
\&        "type":"group_message",
\&        "format": "media",
\&        "post_type": "receive_message"
\&    }
\&
\&    #XXXXXXXXXXXXXXXX XX
\&
\&    XXXXXXpost_apiXXXXXXXXXXXXXXXXXXX
\&    post_apiXXXXXXXXXXXX text/json XX application/jsonXXXjsonXXXXXXX
\&
\&        {"reply":"xxxxx","code":0} #XXXXXXXXXXreplyXXXXXXXXXXXXXX
\&
\&    XXXXXXXpost_apiXXXXXXXXXXXXXXpost_apiXXXXXXX
\&
\&    HTTP/1.1 200 OK
\&    Connection: close
\&    Content\-Type: application/json;charset=UTF\-8
\&    Date: Mon, 29 Feb 2016 05:53:31 GMT
\&    Content\-Length: 27
\&    Server: Mojolicious (Perl)
\&
\&    {"reply":"XX","code":0}
\&
\&    XXXXXXXXXXXXXXXXXXXXX "XX"
\&
\&    XXXXXXXXXXXXXXXXXX media XXXXX:
\&
\&    {"media":"http://www.baidu.com/test.jpg","code":0}                          #XXurlXXXX
\&
\&    {"media":"/tmp/test.jpg","code":0}                                          #XXXXXXXXXX
\&
\&    {"reply":"XXXXXX","media":"http://www.baidu.com/test.jpg","code":0}   #XXXXXXXXX
\&
\&    #XXXXXX
\&    
\&    XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&    
\&    |  XXXX                    |XXXX    |XXXXXX
\&    |\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-|:\-\-\-\-\-\-\-\-\-\-\-|:\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-|
\&    |new_group                     |XXXXX  | XXXXX
\&    |new_friend                    |XXXX    | XXXXXX
\&    |new_group_member              |XXXXXX| XXXXXXXXXXXXX
\&    |lose_group                    |XXXX    | XXXXX
\&    |lose_friend                   |XXXX    | XXXXXX
\&    |lose_group_member             |XXXXXX| XXXXXXXXXXXXX
\&    |group_property_change         |XXXXXX| XXXXXXXXXXXXXX
\&    |group_member_property_change  |XXXXXX| XXXXXXXXXXXXXXX
\&    |friend_property_change        |XXXXXX| XXXXXXXXXXXXXXX
\&    |user_property_change          |XXXXXX| XXXXXXXXXXXXXXX
\&
\&    connect to 127.0.0.1 port 4000
\&    POST /post_api
\&    Accept: */*
\&    Content\-Length: xxx
\&    Content\-Type: application/json
\&
\&    {
\&        "post_type":"event",
\&        "event":"new_friend",
\&        "params":[
\&            {
\&                "account":"ms\-xiaoice",
\&                "name":"XX",
\&                "markname":"",
\&                "sex":"0",
\&                "city":"XX",
\&                "signature":"XXXXXXXXXXXXXXXXXX~~",
\&                "province":"XX",
\&                "displayname":"XX",
\&                "id":"@75b9db5ae52c87361d1800eaaf307f4d"
\&            }
\&        ],
\&
\&    }
\&
\&    XXXXXXXjsonXXXX\`post_type\`XXXXXXXXXXXXXXXXXXX
.Ve
.PP
XXXXXXXXXXXXXXXAPIXXXXXXjsonXXXXXX
.PP
.Vb 4
\&    #XXXX
\&    /openwx/get_user_info           #XXXXXX
\&    /openwx/get_friend_info         #XXXXXX
\&    /openwx/get_group_info          #XXXXX
\&
\&    #XXXXXXXXGETXPOST
\&
\&    #XXXXXX /openwx/send_friend_message
\&
\&    XXXXXX
\&    id              #XXXid
\&    account         #XXXXXXX
\&    displayname     #XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&    markname        #XXXXXXX
\&
\&    media_path      #XXXXXXXXXXX /tmp/123.jpg, http://www.example.com/123.jpgXXXXurlencodeX
\&    media_mime      #XXXXXXXXXXXXXimage/jpeg, text/plain
\&    media_ext       #XXXXXXXXXXXX jpg,txt
\&
\&    #XXXXX  /openwx/send_group_message
\&
\&    XXXXXX
\&    id              #XXXid
\&    displayname     #XXXXXXX
\&
\&    media_path      #XXXXXXXXXXX /tmp/123.jpg, http://www.example.com/123.jpgXXXXurlencodeX
\&    media_mime      #XXXXXXXXXXXXXimage/jpeg, text/plain
\&    media_ext       #XXXXXXXXXXXX jpg,txt
\&
\&    #XXXXXX /openwx/consult
\&    
\&    XXXXXX
\&    id              #XXXid
\&    account         #XXXXXXX
\&    displayname     #XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&    markname        #XXXXXXX
\&    timeout         #XXXXXXXXXX30X
\&
\&    media_path      #XXXXXXXXXXX /tmp/123.jpg, http://www.example.com/123.jpgXXXXurlencodeX
\&    media_mime      #XXXXXXXXXXXXXimage/jpeg, text/plain
\&    media_ext       #XXXXXXXXXXXX jpg,txt
\&
\&    XXXXXXXXXX(XXXXms\-xiaoice)XXXXXXXXXX
\&    GET /openwx/consult?account=ms\-xiaoice&content=haha HTTP/1.1
\&    User\-Agent: curl/7.29.0
\&    Host: 127.0.0.1:3000
\&    Accept: */*
\&
\&    HTTP/1.1 200 OK
\&    Content\-Type: application/json;charset=UTF\-8
\&    Date: Tue, 01 Mar 2016 07:25:11 GMT
\&    Content\-Length: 94
\&    Server: Mojolicious (Perl)
\&
\&    {"reply":"XXXXXXXX","status":"XXXX","msg_id":"2683625013724723712","code":0}
\&
\&    XXXXXXXXXXX
\&
\&    {"reply":null,"reply_status":"reply timeout","status":"XXXX","msg_id":1456817344504,"code":0}
.Ve
.PP
\&\s-1XXXX\s0
.PP
.Vb 7
\&    http://127.0.0.1:3000/openwx/get_user_info
\&    http://127.0.0.1:3000/openwx/send_friend_message?id=xxx&content=hello
\&    http://127.0.0.1:3000/openwx/send_friend_message?account=xxx&content=hello
\&    http://127.0.0.1:3000/openwx/send_friend_message?markname=test_friend&content=hello
\&    http://127.0.0.1:3000/openwx/send_group_message?displayname=test_group&content=hello
\&    http://127.0.0.1:3000/openwx/send_group_message?id=xxx&content=%e4%bd%a0%e5%a5%bd (XXXXutf8XXXXXurlencode)
\&    http://127.0.0.1:3000/openwx/consult?account=ms\-xiaoice&content=haha
\&
\&    http://127.0.0.1:3000/openwx/send_friend_message?id=xxx&media_path=https%3a%2f%2fss0.bdstatic.com%2f5aV1bjqh_Q23odCf%2fstatic%2fsuperman%2fimg%2flogo%2fbd_logo1_31bdc765.png
\&    http://127.0.0.1:3000/openwx/send_friend_message?id=xxx&media_path=%2ftmp%2fhello.jpg
.Ve
.PP
XXAPIXXXXXXgithubXhttps://github.com/sjdy521/Mojo\-Weixin/blob/master/API.md <https://github.com/sjdy521/Mojo-Weixin/blob/master/API.md>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Mojo::Webqq
.PP
https://github.com/sjdy521/Mojo\-Weixin <https://github.com/sjdy521/Mojo-Weixin>
.SH "AUTHOR"
.IX Header "AUTHOR"
sjdy521, <sjdy521@163.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2014 by sjdy521
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.10.1 or,
at your option, any later version of Perl 5 you may have available.
