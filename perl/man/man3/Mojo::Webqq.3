.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Mojo::Webqq 3"
.TH Mojo::Webqq 3 "2016-10-20" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojo::Webqq \- A Webqq Client Framework base on Mojolicious
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 5
\&    #XX: 
\&    #XXXXXXXXXXUTF8XXXXXXXXXXXXXXXXXXUTF8XXXXXXXXXXXXXXXXXX
\&    #XXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&    #XXXXXIDEXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&    #XXXXXXXXXXXXXXX log_encoding XXX
\&
\&    #XXXXXXXXXXXXX:
\&    #XXXXXXXXX
\&    #XXXXXXXXXXXXXXX
\&    #XXXXXXXXXXX
\&    #XXXXXX
\&
\&    #XXXXXX[QQXXXX]APPXXXXXXXXXXXXXX
\&    #XXXXXXXQQXXXXXXXXXXXXX
\&
\&    use Mojo::Webqq;
\&    use Mojo::Util qw(md5_sum);
\&
\&    my $qq = 12345678;           #XXXQQX
\&    my $pwd = "your password";   #XXXXXXXXXXXXX
\&    my $pwd_md5 = md5_sum($pwd); #XXXXXXX32XXXmd5
\&
\&    #XXXXXXXXXXXXXXXXqqX
\&    my $client=Mojo::Webqq\->new(
\&        ua_debug    =>  0,         #XXXXXXXdebugXX
\&        log_level   =>  "info"     #XXXXXXXdebug|info|warn|error|fatal
\&        qq          =>  $qq,       #XXXXXXqqXXXXXXXXXXXXXXXXcookieXX
\&        pwd         =>  $pwd_md5,  #XXXXXXXXXXXXXXXXXXXXXXXXXmd5X
\&        login_type  =>  "qrlogin", #"qrlogin"XXXXXXXX"login"XXXXXXXX
\&    );
\&    #XX: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&    #XXXXXXXXXXXXXXXXXX
\&
\&    #XXXXXShowMsgXXXXXXXXXXXXXXXXXX
\&    $client\->load("ShowMsg");
\&
\&    #XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&    $client\->on(receive_message=>sub{
\&        my ($client,$msg)=@_;
\&        $msg\->reply($msg\->content); #XXXXXXXXXXXXXX
\&        #XXXXXX$msg\->dump() XXXXXXX
\&    });
\&
\&    #readyXXXXX XXXXXXXXXXXXXXXXXXXXXXXXXX/XX/XXXX
\&    #XXXXXXXXXX ready XXX
\&    $client\->on(ready=>sub{
\&        my $client = shift;
\&
\&        #XXXXXXXX 
\&
\&    });
\&
\&    #XXXXXXX
\&    $client\->run();
\&
\&    #runXXXXXXXXXXXXXXXXXXX
\&    #XXrunXXXXXXXXXXXXXXXXXXrunXXXXXXXXXXXXX
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
XXXXXXXXXXXQQXXXXXQQXXXXXQQXXXXPerlXXXXXPerldocXXXXXXXXQQXIRCXXXX
.PP
\&\s-1XXX\s0Webqq::ClientXXXXXXLWP+AnyEventXXXXXXXXXX
.PP
XXXXXXXXXXXbugXXXXXXXXXXX
.PP
\&\s-1XXXX\s0Webqq::Client\s-1XXXXXXXX\s0Mojolicious\s-1XXXXXXXXXXXXXXX\s0
.PP
\&\s-1XX\s0Mojo::Base\s-1XXXXXXXXXX\s0Mojo::EventEmitter\s-1XXXXXXXXXX\s0
.PP
\&\s-1XX\s0Mojo::UserAgent\s-1XXXXXXXXXHTTPXXXXX\s0Mojo::Log\s-1XXXXXXXXXX\s0 \s-1XX\s0
.PP
\&\s-1XXXXXXXXXXXXXXXXXX\s0Mojolicious
.SH "XXXX"
.IX Header "XXXX"
\&\s-1XXXXXX\s0 \s-1XXXXXXXXXXXXXXXXXX\s0 \s-1XXXXXXXXXXXXXXXX\s0
.PP
\&\s-1XXXXXX\s0Mojo::Webqq::Model::BaseXXdumpXXXXXXXXXXXXXXXXXXXXX
.PP
\&\s-1XXXXXXXXXXXXXXXXXXX\s0
.SS "Mojo::Webqq::User \s-1XX\s0"
.IX Subsection "Mojo::Webqq::User XX"
.Vb 1
\&    XX:
\&
\&    birthday        #XX
\&    phone           #XX
\&    occupation      #XX
\&    college         #XX
\&    type            #XXX"user"
\&    qq              #qqXX
\&    id              #XXXXXXXXXXXXXXXXXXXidXqqXXXXXXXXX
\&    blood           #XX
\&    constel         #XX
\&    homepage        #XX
\&    state           #XXXX online|away|busy|callme|silent|hidden
\&    country         #XX
\&    city            #XX
\&    nick            #XX    
\&    displayname     #XXXXXXXXX
\&    shengxiao       #XX
\&    email           #XX
\&    client_type     #XXX"web"
\&    province        #XX
\&    gender          #XX
\&    mobile          #XX
\&    signature       #XXXX
\&
\&    XXX
\&    dump
\&    is_me           #XXXXXXXXX
.Ve
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXXXX\s0 user \s-1XXXXX\s0
.PP
.Vb 4
\&    $client\->user       #XXXXXXMojo::Webqq::UserXX
\&    $client\->user\->nick #XXXXXX
\&    $client\->user\->id   #XXXXid
\&    $client\->user\->dump
.Ve
.SS "Mojo::Webqq::Friend \s-1XX\s0"
.IX Subsection "Mojo::Webqq::Friend XX"
.Vb 1
\&    XXX
\&
\&    qq              #XXXqqXX
\&    id              #XXXidXXXXXXXXXXXXXXXXXXXXXXXXXX idXXqqX
\&    type            #XXX"friend"
\&    category        #XXXXXXX
\&    nick            #XXXX
\&    markname        #XXXXXX
\&    displayname     #XXXXXmarkname XXXmarkname XXXXnick
\&    is_vip          #XXXvipXX
\&    vip_level       #vipXX
\&    state           #XXXX online|away|busy|silent|offline
\&    client_type     #XXXXXXX pc|mobile|iphone|unknown
\&
\&    XX:
\&    send            #XXXXXXXXX
\&    is_friend       #XXXXXXXXX
\&    dump
\&
\&    XXXXX
\&
\&    my $friend = $client\->search_friend(nick=>xxx);
\&    $client\->print("XXXXX: ",$friend\->category,"\en"); #XX$client\->print()XXXXXXXXXXXXXXX
\&    $friend\->dump();
\&
\&    $friend\->send("hello world"); #X$client\->send_message($friend,"hello world")XXX
\&
\&    #XXXX
\&    $client\->each_friend(sub{
\&        my($client,$friend) = @_;
\&        ...;
\&    });
\&    
\&    for my $friend ($client\->friends){
\&        ...;
\&    }
.Ve
.SS "Mojo::Webqq::Group \s-1XX\s0"
.IX Subsection "Mojo::Webqq::Group XX"
.Vb 1
\&    XXX
\&
\&    gid             #XXidXXXXXXXXXXXXXXXXXXXXXXX
\&    gtype           #create|attend|manage XXXXXXXX|XXXX|XXXX
\&    type            #XXX"group"
\&    gnumber         #XXX
\&    gname           #XXX
\&    gmemo           #XXX
\&    gcreatetime     #XXXXX
\&    glevel          #XXX
\&    gowner          #XXXXXid
\&    gmarkname       #XXXXX
\&    displayname     #XXXXXgmarkname XXXgmarkname XXXXgname
\&    member          #XXXXXXXXXXXXXXXXXXXXXXXXXMojo::Webqq::Group::MemberXXX
\&
\&    XXX
\&    search_group_member     #XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXundef
\&    each_group_member       #XXXXXXXXXXX
\&    invite_friend           #XXXXXX
\&    kick_group_member       #XXXXX
\&    set_group_admin         #XXXXXXXXX
\&    remove_group_admin      #XXXXXXXXXXX
\&    set_group_member_card   #XXXXX
\&    shutup_group_member     #XXXXXXXX
\&    speakup_group_member    #XXXXXXX
\&    members                 #XXXXXXXXX  
\&    send                    #XXXXXXXX
\&    me                      #XXXXXXXXXXXX (Mojo::Webqq::Group::Member)
\&    is_group                #XXXXXXXXXX
\&    dump                    #XXXXXXXXXXXX
\&    qiandao                 #XX
\&
\&    XXXXX
\&    my $group = $client\->search_group(gname=>"PERLXXXXX"); #XXXXMojo::Webqq::GroupXX
\&    $group\->send("hello world"); #XXXXXXXXXX
\&
\&    my $member = $group\->search_group_member(id=>xxx,nick=>xxx); #XXXXMojo::Webqq::Group::MemberXX
\&    $member\->send("hello world"); #XXXXXXXXXXXXXXX
\&
\&    $group\->each_group_member(sub{
\&        my($client,$member) = @_;
\&        ...;
\&    });
\&
\&    for my $group ($client\->groups){
\&        ...;
\&    }
\&
\&    #XXXXXXXXXXXX
\&    $group\->me\->displayname 
\&
\&    #XXXXXXXX
\&    $group\->invite_friend( $friend1 [,$friend2,...] ); 
\&
\&    #XXXXXXXXXXXXX
\&    $group\->kick_group_member($member1 [,$member2,...]);
\&
\&    #XXXXXXXXXXXXXXXXX
\&    $group\->set_group_admin($member1 [,$member2,...]);
\&
\&    #XXXXXXXXXXXXXXXXXXX
\&    $group\->remove_group_admin($member1 [,$member2,...]);
\&
\&    #XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX60X
\&    $group\->shutup_group_member(60,$member1 [,$member2,...]);
\&
\&    #XXXXXXXXXXXXX
\&    $group\->speakup_group_member($member1 [,$member2,...]);
\&
\&    #XXXXXXXX
\&    $group\->set_group_member_card($group\->me, $card);
\&    $group\->me\->set_card($card);
\&
\&    #XXXXX
\&    $group\->me\->set_card(undef);
\&
\&    #XXXXXXXXXXXXXXXXX
\&    $group\->set_group_member_card($member,$card);
.Ve
.SS "Mojo::Webqq::Group::Member \s-1XXX\s0"
.IX Subsection "Mojo::Webqq::Group::Member XXX"
.Vb 1
\&    XXX
\&
\&    nick            #XXXXX
\&    type            #XXX"group_member"
\&    province        #XX
\&    gender          #XX
\&    id              #XXidXXXXXXXXXXXXXXXXXXXXXXX
\&    country         #XX
\&    city            #XX
\&    card            #XXX
\&    displayname     #XXXcardXXXcardXXXXnick
\&    state           #XX
\&    client_type     #XXXXX
\&    qq              #qqXXXXXXXqqXXXXXXXXXXXapiXXXXXXXXXXXXX
\&    qage            #qX
\&    join_time       #XXXX
\&    last_speak_time #XXXXXX
\&    level           #XX XX|XX|XX X
\&    role            #XX admin|owner|member
\&    bad_record      #XXXXXXXX 0|1
\&    gid             #XXXXid
\&    gtype           #XXXXXX
\&    gnumber         #XXXXXXX
\&    gname           #XXXXXX
\&    gmemo           #XXXXXX
\&    gcreatetime     #XXXXXXXX
\&    glevel          #XXXXXX
\&    gowner          #XXXXXXXid
\&    gmarkname       #XXXXXXXX
\&
\&    XX:
\&    send            #XXXXXXXXXX $member\->send("hello world")
\&    dump
\&    is_me           #XXXXXXXXXXXX
\&    is_group_member #XXXXXXXXXX
\&    set_card        #XXXXXXXXXXXXXXXXXXXX
\&    group           #XXXXXXXXXX
.Ve
.SS "Mojo::Webqq::Discuss \s-1XXX\s0"
.IX Subsection "Mojo::Webqq::Discuss XXX"
.Vb 1
\&    XXX
\&
\&    did         #XXXid
\&    type        #XXX"discuss"
\&    dname       #XXXXX
\&    displayname #XXXXXXdnameXX
\&    downer      #XXXXXXid
\&    member      #XXXXXXXXXXXXXXXXXXXXMojo::Webqq::Discuss::MemberXX
\&
\&    XX:
\&
\&    search_discuss_member   #XXXXXXX
\&    each_discuss_member     #XXXXXXX
\&    members                 #XXXXXXXXXXX
\&    send                    #XXXXXXXXXX
\&    me                      #XXXXXXXXXXXX (Mojo::Webqq::Discuss::Member)
\&    dump
\&    is_discuss
.Ve
.SS "Mojo::Webqq::Discuss::Member \s-1XXXXX\s0"
.IX Subsection "Mojo::Webqq::Discuss::Member XXXXX"
.Vb 1
\&    XXX
\&
\&    nick
\&    type                    #XXX"discuss_member"
\&    id
\&    qq
\&    ruin
\&    state
\&    client_type
\&    dname
\&    displayname             #XXXdnameXX
\&    did
\&    downer
\&
\&    XXX
\&    send                    #XXXXXXXXXXXX
\&    dump
\&    is_me                   #XXXXXXXXXXXX
\&    is_discuss_member
\&    discuss                 #XXXXXXXXXXXX
.Ve
.SH "XXXX"
.IX Header "XXXX"
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
XXXXXXXXXMojo::Webqq::Message::BaseXXXdumpXX
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.SS "Mojo::Webqq::Message::Recv::Message \s-1XXXXXXXX\s0"
.IX Subsection "Mojo::Webqq::Message::Recv::Message XXXXXXXX"
.Vb 1
\&    XX:
\&
\&    type            #XX"message"
\&    msg_class       #XX"recv"
\&    msg_from        #XXXXXXXXXXXXXXXXXXXXXXX"none"
\&    ttl             #XXX5 XttlXX0XXXXXXXX
\&    allow_plugin    #XX1
\&    msg_id          #XXid
\&    sender_id       #XXXid
\&    receiver_id     #XXXid
\&    sender          #XXXXXXMojo::Webqq::Friend
\&    receiver        #XXXXXXMojo::Webqq::User
\&    msg_time        #XXXXXX
\&    content         #XXXX
\&    text            #XXXXXXXXXXXXXXXX
\&    raw_content     #XXXXXX XXXXXX
\&
\&    XXX
\&    dump            #XXXXXXXXXXXXX
\&    to_json_hash    #XXXXXXjsonXXXhashXXXXXXXXXX
\&                    #XXXXXXXXXXXXXXXXXXXXXXX
\&    is_at           #XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&    faces           #XXXXXXXXXX
\&    images          #XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&                    #XX receive_pic XXXXXXXXXXXXXXXXXX
\&    reply           #XXXXXXX
\&                    #XXmsg_classXrecvXXXXXXXXXXXXXXXXXmsg_classXsendXXXXXXXXXXXXXXX
\&
\&    XXXX:
\&    $msg\->sender\->nick; #XXXXXXXXXX XXXXXXX XXXXXXXXXXXXMojo::Webqq::Friend
\&
\&    use Mojo::JSON qw(encode_json);
\&    my $json_hash = $msg\->to_json_hash();    #XXXXXutf8 decodeXhashXX
\&    my $json_text = encode_json($json_hash); #XhashXXXjsonXXX
\&
\&    $msg\->dump();
\&    $msg\->reply("hello world"); #X$client\->reply_message($msg,"hello world")XXX
\&
\&    $msg\->is_at();          #XXXXXXXXXXXXXXXXXX
\&    $msg\->is_at($member);   #XXXXXXXXXXXXXXXXXXXX
\&    $msg\->is_at($friend);   #XXXXXXXXXXXXXXXXXXXX
\&
\&    my @faces = $msg\->faces(); #("[XX]","[XX]","[XX]")
\&    
\&    $msg\->images(sub{
\&        my($client,$image_path,$sender) = @_;
\&    });
\&
\&    #XXXXXXXX
\&    $client\->on(receive_pic=>sub{
\&        my($client,$image_path,$sender) = @_;
\&    });
.Ve
.SS "Mojo::Webqq::Message::Send::Message \s-1XXXXXXX\s0"
.IX Subsection "Mojo::Webqq::Message::Send::Message XXXXXXX"
.Vb 1
\&    XX:
\&
\&    type            #XX"message"
\&    msg_class       #XX"send"
\&    msg_from        #XXXXXXXXXXXXXXXXXXXXXXX"none"
\&    ttl             #XXX5 XttlXX0XXXXXXXX
\&    allow_plugin    #XX1
\&    msg_id          #XXid
\&    sender_id       #XXXid
\&    receiver_id     #XXXid
\&    sender          #XXXXXXMojo::Webqq::User
\&    receiver        #XXXXXXMojo::Webqq::Friend
\&    msg_time        #XXXXXX
\&    content         #XXXX
\&    text            #XXXXXXXXXXXXXXXX
\&    raw_content     #XXXXXX XXXXXX
.Ve
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXXXX\s0
.PP
msg_class \s-1XXX\s0\*(L"send\*(R"XXXXXXXXXXXmsg_classXXXXXXXXXXXXXXXXXX
.PP
XXXXXXXsenderXXX(Mojo::Webqq::User) receiverXXX(Mojo::Webqq::Friend)
.PP
XXXXXXsenderXXXXXX(Mojo::Webqq::Group::Member) receiverXXXX(Mojo::Webqq::Group::Member)
.PP
XXXXXXXXsenderXXXXXXX(Mojo::Webqq::Discuss::Member) receiverXXXXXX(Mojo::Webqq::Discuss::Member)
.PP
XXXXXXXsenderXXXXXXXXXX receiverXXXXXXXXXX
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXX\s0
.SS "Mojo::Webqq::Message::Recv::GroupMessage \s-1XXXXXXX\s0"
.IX Subsection "Mojo::Webqq::Message::Recv::GroupMessage XXXXXXX"
.Vb 1
\&    XX:
\&
\&    type            #XX"group_message"
\&    msg_class       #XX"recv"
\&    msg_from        #XXXXXXXXXXXXXXXXXXXXXXX"none"
\&    ttl             #XXX5 XttlXX0XXXXXXXX
\&    allow_plugin    #XX1
\&    msg_id          #XXid
\&    group_id        #Xgid
\&    sender_id       #XXXXXXXXid
\&    receiver_id     #XXXidXXXXXXXid
\&    sender          #XXXXXXXXXX Mojo::Webqq::Group::Member
\&    eeceiver        #XXXXX Mojo::Webqq::Group::MemberXX
\&    group           #XXX Mojo::Webqq::Group
\&    msg_time        #XXXX
\&    content         #XXXX
\&    text            #XXXXXXXXXXXXXXXX
\&    raw_content
.Ve
.SS "Mojo::Webqq::Message::Send::GroupMessage \s-1XXXXXX\s0"
.IX Subsection "Mojo::Webqq::Message::Send::GroupMessage XXXXXX"
.SS "Mojo::Webqq::Message::Recv::DiscussMessage \s-1XXXXXXXXX\s0"
.IX Subsection "Mojo::Webqq::Message::Recv::DiscussMessage XXXXXXXXX"
.Vb 1
\&    XXX
\&
\&    type            #XX"discuss_message"
\&    msg_class       #XX"recv"
\&    msg_from        #XXXXXXXXXXXXXXXXXXXXXXX"none"
\&    ttl             #XXX5 XttlXX0XXXXXXXX
\&    allow_plugin    #XX1
\&    msg_id          #XXid
\&    discuss_id      #XXXdid
\&    sender_id       #XXXXXXXXXXid
\&    receiver_id     #XXXid
\&    sender          #XXXXXXXXXXXX Mojo::Webqq::Discuss::Member
\&    receiver        #XXXXXXX Mojo::Webqq::Group::MemberXX
\&    discuss         #XXX Mojo::Webqq::Discuss
\&    msg_time        #XXXX
\&    content         
\&    text            #XXXXXXXXXXXXXXXX
\&    raw_content
.Ve
.SS "Mojo::Webqq::Message::Send::DiscussMessage \s-1XXXXXXXX\s0"
.IX Subsection "Mojo::Webqq::Message::Send::DiscussMessage XXXXXXXX"
.SS "Mojo::Webqq::Message::Recv::SessMessage \s-1XXXXXXXX\s0"
.IX Subsection "Mojo::Webqq::Message::Recv::SessMessage XXXXXXXX"
.Vb 1
\&    XXX
\&
\&    type            #XX"sess_message"
\&    msg_class       #XX"recv"
\&    msg_from        #XXXXXXXXXXXXXXXXXXXXXXX"none"
\&    ttl             #XXX5 XttlXX0XXXXXXXX
\&    allow_plugin    #XX1
\&    msg_id          #XXid
\&    group_id        #Xgid
\&    discuss_id      #XXXdid
\&    sender_id       #XXXXXXXXXXidXXXXid
\&    receiver_id     #Mojo::Webqq::UserXX
\&    sender          #XXXXXXXXXXXXXXXXXX
\&    group           #XXX Mojo::Webqq::Group
\&    discuss         #XXXXX Mojo::Webqq::Discuss
\&    receiver        #XXXXXXXXXXXXXX
\&    msg_time        #XXXX
\&    content         
\&    text            #XXXXXXXXXXXXXXXX
\&    raw_content
\&    via             #XXXXXXXX XX"group" XXXXXXXXXXXX"discuss"
.Ve
.SS "Mojo::Webqq::Message::Send::SessMessage \s-1XXXXXXX\s0"
.IX Subsection "Mojo::Webqq::Message::Send::SessMessage XXXXXXX"
.SS "Mojo::Webqq::Message::Send::Status \s-1XXXXXX\s0"
.IX Subsection "Mojo::Webqq::Message::Send::Status XXXXXX"
.Vb 1
\&    XXX
\&
\&    code    #0 XXXX XXXXXX
\&    msg     #"XXXX"|"XXXX"
\&    
\&    XX:
\&    is_success
\&
\&    XXXXXXXXXXXXXXXXXXX
.Ve
.SH "XXXXX"
.IX Header "XXXXX"
.Vb 9
\&    $client\->security   #XXXXXXXX
\&    $client\->state      #XXXX
\&    $client\->type       #XX XXX smartqqXMojo::WebqqXXXsmartqq
\&    $client\->ua_debug   #httpXXXXXXdebugXX
\&    $client\->log_level  #XXXXXX XXinfo
\&    $client\->log_path   #XXXXXXXXXundefXXXXSTDERR
\&    $client\->version    #XXXXX
\&    $client\->qq         #XXXX
\&    $client\->encrypt_method        #perl|js XXXXXXXXXXXXXXX
.Ve
.SH "XXXXX"
.IX Header "XXXXX"
.SS "\fInew()\fP"
.IX Subsection "new()"
.Vb 6
\&    qq              #XXXqqXXXX
\&    pwd             #XXXXXXXXXXqqXXXXXX32Xmd5
\&    security        #XXXXXXXXXXXXXXXXXXhttpsXX
\&    state           #XXXXXXXXXXonlineXXXonline|away|busy|silent|hidden|offline|callme
\&    ua_debug        #XXXXXXXXXXXX
\&    keep_cookie     #XXX1X0XXXXXXXcookieX1XXXXXXcookieXXXXXXXXXX
\&
\&    log_level       #XXXXXinfoXXXXXdebug|info|warn|error|fatal
\&    log_path        #XXXXXXXXXXXXSTDERR XXXXXXXXXXXXXXXXXXX
\&    log_encoding    #XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&                    #XXXXX Encode XXXXXXXXXXutf8 gbkX
\&    max_recent      #XXXXXXXXXXXXX20
\&
\&    login_type      #"qrlogin"XXXXXXXXXX"login"XXXXXXXXXXXX"qrlogin"
\&    encrypt_method  #perl|js XXXXXXXXXXXXXXXXXXXXXXXXXXX
\&    
\&    tmpdir          #XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&    cookie_dir      #XXcookieXXXXXXXXX tmpdir XXXXXXXX
\&    pic_dir         #XXXXXXXXXXXX tmpdir XXXXXXXX
\&
\&    verifycode_path #XXXXXXXXXXXXX tmpdir XXXXXXXX
\&    qrcode_path     #XXXXXXXXXXX tmpdir XXXXXXXX
\&
\&    #XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&    #XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&
\&    is_init_friend      #XXXXXXXXXXXXXXXXXXX 1
\&    is_init_group       #XXXXXXXXXXXXXXXXXXX 1
\&    is_init_discuss     #XXXXXXXXXXXXXXXXXXXX 1
\&    is_init_recent      #XXXXXXXXXXXXXXXXXXXXXX 0
\&
\&    #XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&    #XXXXXXXXXXXXXXXXXXXXX
\&    is_update_user      #XXXXXXXXXXXXXX 0
\&    is_update_group     #XXXXXXXXXXXXXX 1
\&    is_update_friend    #XXXXXXXXXXXXXX 1
\&    is_update_discuss   #XXXXXXXXXXXXXXX 1
\&    update_interval     #XXXXXXXXXXXXXXXXXXXXXXXX600X
\&
\&    msg_ttl             #XXXXXXXXXXXXXXXX5
\&
\&    qrcode_count_max    #XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&                        #XXXXXXXXXX qrcode_count_max XXXXXXXXXXX10X
\&
\&    $client\->new(ua_debug=>0,qq=>xxxxxx,login_type=>"qrlogin");
\&    $client\->new(ua_debug=>0,qq=>xxxxxx,pwd=>xxxxx,login_type=>"login");
.Ve
.SS "\fIon()\fP"
.IX Subsection "on()"
XXMojo::EventEmitterXXXXXXXXXXXXXXXXXXXXX
.PP
.Vb 1
\&    $client\->on("event1"=>sub{...},"event2"=>sub{...},);
.Ve
.PP
\&\s-1XXXXXXXXXXXX\s0
.SS "\fIlogin()\fP"
.IX Subsection "login()"
\&\s-1XXXXX\s0
.PP
.Vb 1
\&    $client\->login();
.Ve
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0Webqq::Encryption\s-1XX\s0
.PP
\&\s-1XXXX\s0Crypt::RSA \s-1XX\s0 Crypt::OpenSSL::RSA + Crypt::OpenSSL::Bignum\s-1XX\s0
.PP
\&\s-1XXXXXXX\s0Webqq::EncryptionXXXXXXXXXXXXCentosXXXX yum \-y install perl\-Crypt\-OpenSSL\-* \s-1XXXXXX\s0
.SS "\fIrelogin()\fP \s-1XXXX\s0"
.IX Subsection "relogin() XXXX"
XXXXXXXXXXXXXXcookieXXXXXXXXXXXXXXXXXXXXXXXXXXX
.PP
.Vb 1
\&    $client\->relogin()
.Ve
.SS "timer($seconds,$callback) \s-1XXXX\s0"
.IX Subsection "timer($seconds,$callback) XXXX"
\&\s-1XXXXXXXXXXXXXXXX\s0
.PP
.Vb 1
\&    $client\->timer(10,sub{ print "hello world\en" }); #10sXXXhello world
.Ve
.SS "interval($seconds,$callback) \s-1XXXX\s0"
.IX Subsection "interval($seconds,$callback) XXXX"
\&\s-1XXXXXXXXXXXXXXXXXX\s0
.PP
.Vb 1
\&    $client\->interval(10,sub{ print "hello world\en" }); #XX10sXXXhello world
.Ve
.SS "\fIrun()\fP \s-1XXXXXXX\s0"
.IX Subsection "run() XXXXXXX"
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
.Vb 1
\&    $client\->run();
.Ve
.SS "\fImulti_run()\fP \s-1XXXXXXX\s0(\s-1XXX\s0)"
.IX Subsection "multi_run() XXXXXXX(XXX)"
\&\fIXXXXqqXXXXXXXXXXready()\fRXXXX
.SS "\fIready()\fP \s-1XXXXXX\s0"
.IX Subsection "ready() XXXXXX"
XXXXXXXXXXqqXX \f(CW$client\fR\->\fIrun()\fRXXXXXXXXXXXXXXXXXXXX
.PP
XXXXXXXXXXXXX$client\->\fIrun()\fR \fIXXXXready()\fRXX
.PP
.Vb 3
\&    #XXXXXXqqXX
\&    my $client1 = Mojo::Webqq\->new(qq=>xxx1);
\&    my $client2 = Mojo::Webqq\->new(qq=>xxx2);
\&    
\&    $client1\->load("ShowMsg");
\&    $client2\->load("ShowMsg");
\&    
\&    $client1\->ready;
\&    $client2\->ready;
\&    
\&    Mojo::Webqq\->multi_run();
.Ve
.ie n .SS "stop([""auto""|""noexit""]) \s-1XXXXXX\s0"
.el .SS "stop([``auto''|``noexit'']) \s-1XXXXXX\s0"
.IX Subsection "stop([auto|noexit]) XXXXXX"
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
.Vb 2
\&    $client\->stop(["auto"]) #XXXXXautoXXXXqqXXXXXXXXXXXstopXXXXXXXXXX(exit)
\&    $client\->stop("noexit") #XXXXXqqXXXstopXXXXXXXXXXXexitXX
.Ve
.SS "add_job($job_name,$time,$callback); \s-1XXXXXX\s0"
.IX Subsection "add_job($job_name,$time,$callback); XXXXXX"
\&\s-1XXXXXX\s0
.PP
.Vb 2
\&    #XXXXXXXX HH:MM X HH:MM:SS
\&    $client\->add_job("XXXX","07:00",sub{$client\->send_message($friend,"XXX");});
.Ve
.SS "spawn(%opt) \s-1XXXXXX\s0"
.IX Subsection "spawn(%opt) XXXXXX"
\&\s-1XXXXXXXXXXXXXX\s0
.PP
XXXXXXXXXXXXXXXXXXXXXXXXXXXsystem/execXXXXXXXX
.PP
XXXXXXXXXXXXXXsleepX \s-1XXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
XXXXXXXXXXXXXXXXspawnXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
.PP
\&\s-1XXXXXXXXXXXXXXXX\s0
.PP
\&\s-1XXXXXXXX\s0Mojo::Run\s-1XX\s0 \s-1XXXXXXXXXXXXXXXX\s0
.PP
.Vb 9
\&    #XXXXXX
\&    is_blocking     #XXXXXXXXXXX0
\&    max_forks       #XXXXXXXX
\&    cmd             #XXXXXXXXX
\&    param           #XXXXX
\&    exec_timeout    #XXXXXXXXXXXX
\&    stdout_cb       #XXXXXXXXXX STDOUT XXXXXXXXXXXX
\&    stderr_cb       #XXXXXXXXXX STDERR XXXXXXXXXXXX
\&    exit_cb         #XXXXXXXXXXXX
\&
\&    XXXXX
\&    $client\->spawn(
\&        cmd => sub {print "hello world";return "ok"},
\&        exec_timeout => 3,
\&        exit_cb => sub{
\&            my($pid,$hash) = @_;
\&            #$pid XXXXXXXXX
\&            #$hashXXXXXXXXhashXXXXXXXX
\&            #{
\&            #    \*(Aqcmd\*(Aq                  => \*(AqCODE\*(Aq,              #XXXXXXXX
\&            #    \*(Aqtime_stopped\*(Aq         => \*(Aq1441011558.30559\*(Aq,  #XXXXXX
\&            #    \*(Aqtime_started\*(Aq         => \*(Aq1441011557.30242\*(Aq,  #XXXXXX
\&            #    \*(Aqtime_duration_total\*(Aq  => \*(Aq1.00345897674561\*(Aq,  #XXXXXXX
\&            #    \*(Aqtime_duration_exec\*(Aq   => \*(Aq1.00317192077637\*(Aq,  #XXXXXX
\&            #    \*(Aqis_timeout\*(Aq           => undef,               #XXXXXXX
\&            #    \*(Aqexit_status\*(Aq          => 1,                   #XXXXXXX
\&            #    \*(Aqexit_core\*(Aq            => 0,                   #XXXcore
\&            #    \*(Aqexit_signal\*(Aq          => 0,                   #XXXXXX
\&            #    \*(Aqparam\*(Aq                => undef,               #XXXXXXXXX
\&            #    \*(Aqstderr\*(Aq               => \*(Aq\*(Aq,                  #XXXXXXXXXXX
\&            #    \*(Aqstdout\*(Aq               => \*(Aqhello world\*(Aq,       #XXXXXXXXX
\&            #    \*(Aqresult\*(Aq               => [                    #XXXXXX
\&            #                                   \*(Aqok\*(Aq
\&            #                              ]
\&            #}
\&
\&        },
\&    );
\&
\&    $client\->spawn(
\&        cmd             => "ping www.qq.com", #XXXX [\*(Aqping\*(Aq,\*(Aqwww.qq.com\*(Aq]
\&        exec_timeout    => 3,
\&        stdout_cb       => sub{
\&            my($pid,$chunk) = @_;
\&            $client\->print("XXXXXXXXXXXX:",$chunk,"\en");
\&        },
\&        stderr_cb       => sub {
\&            my($pid,$chunk) = @_;
\&            $client\->print("XXXXXXXXXXXX:",$chunk,"\en"); 
\&        },
\&        exit_cb => sub{
\&            my($pid,$res) = @_;
\&            $client\->print("XXXXXXXXXXXXX:",$res\->{stdout},"\en");
\&            $client\->print("XXXXXXXXXXXXX:",$res\->{stderr},"\en");
\&        } 
\&    );
.Ve
.SS "mail(%opt,[$callback]) \s-1XXXXXXX\s0"
.IX Subsection "mail(%opt,[$callback]) XXXXXXX"
\&\s-1XXXXXXX\s0Mojo::SMTP::Client\s-1XXXXXXXXXXXXXXXXXXXX\s0Mojo::SMTP::Client\s-1XX\s0
.PP
.Vb 10
\&    XXXXXXXXXXXX
\&    smtp        #smtpXXXXXXXXsmtp.163.com
\&    port        #smtpXXXXXXXX25
\&    tls         #0|1 XXXXtlsXXXX 0
\&    tls_ca      #tlsXXXX
\&    tls_cert    #tlsXXXX
\&    tls_key     #tlsXXXX
\&    user        #smtpXX
\&    pass        #smtpXX
\&    from        #XXXX
\&    to          #XXXX
\&    cc          #XXXX
\&    subject     #XX
\&    html        #XXXXXXXhtmlXX
\&    text        #XXXXXXXXXXXX
\&    charset     #XXXXXXXXXXXXXXXUTF\-8
\&    data        #XXXXXXXXXMIME::LiteXXXXXXX
\&
\&    $client\->mail(smtp=>smtp.163.com,user=>xxx,pass=>xxx,from=>xxx,to=>xxx,subject=>"XXXX",text=>"hello world",sub{
\&        my ($send_status,$err) = @_;
\&        if($send_status){print "XXXX"} 
\&        else{print "XXXX"} 
\&    });
\&
\&    XXXXXXXXX
\&    my ($send_status,$err) = $client\->mail(...);
.Ve
.SS "\fIupdate_friend()\fP \s-1XXXXXX\s0"
.IX Subsection "update_friend() XXXXXX"
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.SS "update_group([$group]) \s-1XXXXX\s0"
.IX Subsection "update_group([$group]) XXXXX"
XXXXXXXXXXX$group(Mojo::Webqq::GroupXX) \s-1XXXXXXXXXXXXXXXXXXXXX\s0
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXXXX\s0
.SS "update_discuss([$discuss]) \s-1XXXXXXX\s0"
.IX Subsection "update_discuss([$discuss]) XXXXXXX"
XXXXXXXXXXXXX$discuss(Mojo::Webqq::DisucssXX) \s-1XXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXXXX\s0
.SS "\fIupdate_recent()\fP \s-1XXXXXXXXX\s0"
.IX Subsection "update_recent() XXXXXXXXX"
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.SS "each_friend(sub{...})  \s-1XXXX\s0"
.IX Subsection "each_friend(sub{...})  XXXX"
\&\s-1XXXXXXX\s0
.PP
.Vb 4
\&    $client\->each_friend(sub{
\&        my($client,$friend) = @_; #$friendXXXMojo::Webqq::FriendXX
\&        ...;
\&    });
.Ve
.SS "\fIfriends()\fP \s-1XXXXXXXX\s0"
.IX Subsection "friends() XXXXXXXX"
XXXXXXXXXXXXXXXXXXXXMojo::Webqq::FriendXX
.PP
.Vb 1
\&    my @friends = $client\->friends();
.Ve
.SS "each_group(sub{...}) \s-1XXX\s0"
.IX Subsection "each_group(sub{...}) XXX"
\&\s-1XXXXXX\s0
.PP
.Vb 4
\&    $client\->each_group(sub{
\&        my($client,$group) = @_; #$groupXXXMojo::Webqq::GroupXX
\&        ...;
\&    });
.Ve
.SS "\fIgroups()\fP \s-1XXXXXXX\s0"
.IX Subsection "groups() XXXXXXX"
XXXXXXXXXXXXXXXXXXXMojo::Webqq::GroupXX
.PP
.Vb 1
\&    my @groups = $client\->groups();
.Ve
.SS "each_group_member(sub{...}) \s-1XXXXX\s0"
.IX Subsection "each_group_member(sub{...}) XXXXX"
\&\s-1XXXXXXXXXXXX\s0
.PP
.Vb 4
\&    $client\->each_group_member(sub{
\&        my($client,$member) = @_; #$memberXXXMojo::Webqq::Group::MemberXX
\&        ...;
\&    });
\&
\&    XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&
\&    $group\->each_group_member(sub{
\&        my($client,$member)=@_;
\&        ...;
\&    });
.Ve
.SS "each_discuss(sub{...})  \s-1XXXXX\s0"
.IX Subsection "each_discuss(sub{...})  XXXXX"
\&\s-1XXXXXXXXXXXXXXXXXX\s0 \s-1XXXX\s0
.SS "\fIdiscusss()\fP \s-1XXXXXXX\s0"
.IX Subsection "discusss() XXXXXXX"
XXXXXXXXXXXXXXXXXXXXXMojo::Webqq::DiscussXX
.PP
.Vb 1
\&    my @discusss = $client\->discusss;
.Ve
.SS "each_discuss_member(sub{...}) \s-1XXXXXXX\s0"
.IX Subsection "each_discuss_member(sub{...}) XXXXXXX"
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXX\s0 \s-1XXXX\s0
.SS "each_recent(sub{...}) \s-1XXXXXXX\s0"
.IX Subsection "each_recent(sub{...}) XXXXXXX"
.SS "\fIrecents()\fP \s-1XXXXXXXXX\s0"
.IX Subsection "recents() XXXXXXXXX"
XXXXXXXXXXXXXXXXXXXXXMojo::Webqq::Friend/Mojo::Webqq::Group::Member/Mojo::Webqq::Dicuss::MemberXX
.PP
.Vb 1
\&    my @recents = $client\->recents();
.Ve
.SS "send_message($friend,$content,[$callback]) \s-1XXXXXX\s0"
.IX Subsection "send_message($friend,$content,[$callback]) XXXXXX"
.Vb 2
\&    my $friend = $client\->search_friend(id=>xxx);#$friendXXXMojo::Webqq::FriendXXX
\&    $client\->send_message($friend,"hello world");#XXXXXXXutf8XX
\&
\&    XcallbackXXXXXXXXXXXX
\&    $client\->send_message($friend,"hello world",sub{
\&        my ($client,$msg) = @_;
\&        #XXXXXXXXXXXXX
\&        $msg\->msg_from("XXXXXXXX");
\&    
\&        #XXXXXXXXXXXXXXXX
\&        $msg\->cb(sub{
\&            my($client,$msg,$status)=@_;
\&            print $msg\->msg_id . "XXXX\en" if  not $status\->is_success;
\&        });
\&    });
.Ve
.SS "send_group_message($group,$content,[$callback]) \s-1XXXXX\s0"
.IX Subsection "send_group_message($group,$content,[$callback]) XXXXX"
.Vb 2
\&    my $group = $client\->search_group(gname=>"PERLXXXX");#$groupXXXMojo::Webqq::GroupXXX
\&    $client\->send_group_message($group,"hello world");
.Ve
.SS "send_discuss_message($discuss,$content,[$callback]) \s-1XXXXXXX\s0"
.IX Subsection "send_discuss_message($discuss,$content,[$callback]) XXXXXXX"
.Vb 2
\&    my $discuss = $client\->search_discuss(dname=>"XXX");#$discussXXXMojo::Webqq::DiscussXXX
\&    $client\->send_discuss_message($discuss,"hello world");
.Ve
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXXXXX\s0
.SS "send_sess_message($group_member|$discuss_member,$content,[$callback]) \s-1XXXXXXXXXXX\s0"
.IX Subsection "send_sess_message($group_member|$discuss_member,$content,[$callback]) XXXXXXXXXXX"
.Vb 4
\&    #XXXXXXXXXXXXXXXX
\&    my $group_member = $client\->search_group_member(gname=>"PERLXXXX",nick=>"XX");
\&    #$group_memberXXXMojo::Webqq::Group::MemberXXX
\&    $client\->send_sess_message($group_member,"hello world");
\&
\&    #XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&    my $group = $client\->search_group(gname=>"PERLXXXX");
\&    my $member = $group\->search_group_member(nick=>"XX");
\&    $client\->send_sess_message($member,"hello world");
\&
\&    my $discuss_member = $client\->search_discuss_member(dname=>"XXX",nick=>"XX");
\&    #$discuss_memberXXXMojo::Webqq::Discuss::MemberXXX
\&    $client\->send_sess_message($discuss_member,"hello world");
.Ve
.SS "reply_message($msg,$content,[$callback]) \s-1XXXXXXXXXX\s0"
.IX Subsection "reply_message($msg,$content,[$callback]) XXXXXXXXXX"
\&\fIsend_message()\fR/\fIsend_group_message()\fR/\fIsend_discuss_message()\fR/\fIsend_sess_message()\fR
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
XXXXXXXXXXXXXXXXXreply_messageXXXXX
.PP
.Vb 1
\&    $client\->reply_message($msg,$content);
.Ve
.SS "http_get httpXXXXXXgetXX"
.IX Subsection "http_get httpXXXXXXgetXX"
XXXXMojo::UserAgentXgetXXXXXXXXXXXXXMojo::UserAgent\->getXXXXXXXXXXX
.PP
XXhttpXXX
.PP
.Vb 2
\&    #XXXXX  XXhttpXXXXXXXXXXXXXXXXundef
\&    my $http_body = $client\->http_get($url,$header);
\&
\&    #XXXXXXXXhttpXXXXXX$ua,$tx
\&    my ($http_body,$ua,$tx) = $client\->http_get($url,$header);
\&    
\&    #XXXhttp headerXXXXXXXXXXXXXXX
\&    #json=>1 XXXXXXjsonXXXXjson decodeXXperlXhashXX
\&    #retry_times=>3 XXXXXXXXXXXXXXXXX$client\->ua_retry_timesXX
\&    my $json_decode_hash = $client\->http_get($url,{json=>1,retry_times=>3,Host=>"www.qq.com"});
\&
\&    #http postXX
\&    $client\->http_post($url,$header,form=>$post_data);
.Ve
.PP
XXXhttpXXX
.PP
.Vb 4
\&    $client\->http_get($url,$header,sub{
\&        my($http_body,$ua,$tx) = @_;    
\&        #XXXX $http_body XXundef
\&    });
.Ve
.PP
XXXXXXXXXXXXXXXXXXXXXXXXXXXXhttpXXXXXXXXXXXXhttpXXXXhttpXXXXXX
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.SS "http_post httpXXXXXXpostXX"
.IX Subsection "http_post httpXXXXXXpostXX"
X http_get \s-1XXXXXXXXX\s0
.SS "print \s-1XXXXXXXXXXXXXXXXXXXXXXX\s0"
.IX Subsection "print XXXXXXXXXXXXXXXXXXXXXXX"
.Vb 1
\&    $client\->print("XXXXXXXXXXXXX...");
.Ve
.SH "XXXXX"
.IX Header "XXXXX"
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
XXXXX$client\->on(event=>sub{xxx})XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
.PP
\&\s-1XXX\s0
.PP
.Vb 2
\&    new_friend/new_group/new_discuss/new_group_member/new_discuss_member
\&    lose_friend/lose_group/lose_discuss/lose_group_member/lose_discuss_member
.Ve
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
\&\s-1XXXXXXXXXX\s0,XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX:
.PP
1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX10XX
.PP
2XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
.PP
\&\s-1XXXXXXXXXXXXXXXXXXX10XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
\&\s-1XXXXXXXXXXX\s0(\s-1XXXXXX\s0)
.PP
.Vb 7
\&                                                                                 +\->before_send_message
\&    plugin_load \-+                                                               |\->receive_message
\&                 |\->after_load_plugin\-\->input_img_verifycode\->login\->ready\->run\->|\->send_message
\&    plugin_call \-+                    |                                      |   |\->new_friend
\&                                      +\-input_qrcode                         |   |\->receive_friend_pic
\&                                                             relogin<\-login<\-+   |\->lose_friend
\&                                                                                 ...
.Ve
.SS "reveive_message \s-1XXXXXX\s0"
.IX Subsection "reveive_message XXXXXX"
\&\s-1XXXXXXXXXXXXXXXXXXX\s0
.PP
.Vb 1
\&    $client\->on(receive_message=>sub{my ($client,$msg)=@_;$msg\->dump});
.Ve
.SS "send_message \s-1XXXXXX\s0"
.IX Subsection "send_message XXXXXX"
\&\s-1XXXXXXXXXXX\s0 \s-1XXXXXXXX\s0 X \s-1XXXXXX\s0
.PP
XXXXXXXMojo::Webqq::Message::Send::StatusXXX
.PP
.Vb 5
\&    $client\->on(send_message=>sub{
\&        my ($client,$msg,$status)=@_; 
\&        #$statusXXXMojo::Webqq::Message::Send::StatusXXX,XXXXXXXXXXXXXX
\&        print $msg\->msg_id,"XXXX" if $status\->is_success  
\&    });
.Ve
.SS "login \s-1XXXXXX\s0"
.IX Subsection "login XXXXXX"
\&\s-1XXXXXXXXX\s0
.PP
.Vb 5
\&    $client\->on(login=>sub{
\&        my($client,$is_scan) = @_;
\&        #$is_scan   XX1XXXXXXXXXXXXXXX XXXXXXXXidXXXXXXX
\&        #           XX0XXXXXXXXXcookieXXXXXXXXXXXXXXXXXXidXXXXXXXX
\&    });
.Ve
.SS "relogin \s-1XXXXXXXX\s0"
.IX Subsection "relogin XXXXXXXX"
\&\s-1XXXXXXXXXXXXXXXXXXXX\s0
.SS "input_img_verifycode \s-1XXXXXXX\s0"
.IX Subsection "input_img_verifycode XXXXXXX"
\&\s-1XXXXXXXXXXXXXXXXXXXXX\s0
.SS "input_qrcode \s-1XXXXXXX\s0"
.IX Subsection "input_qrcode XXXXXXX"
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXX\s0
.SS "ready \s-1XXXX\s0"
.IX Subsection "ready XXXX"
\&\s-1XXXXXXXXX\s0
.SS "run \s-1XXXXXX\s0"
.IX Subsection "run XXXXXX"
\&\s-1XXXXXXXXXXXXXXXXXXXX\s0
.SS "plugin_call \s-1XXXX\s0"
.IX Subsection "plugin_call XXXX"
\&\s-1XXXXXXXXXXXXXX\s0
.SS "plugin_load \s-1XXXX\s0"
.IX Subsection "plugin_load XXXX"
\&\s-1XXXXXXXXXXXXXXXX\s0
.SS "after_load_plugin \s-1XXXXXXXX\s0"
.IX Subsection "after_load_plugin XXXXXXXX"
\&\s-1XXXXXXXXXXXXXX\s0
.SS "new_friend \s-1XXXX\s0"
.IX Subsection "new_friend XXXX"
\&\s-1XXXXXXXXXXXXXXXXXXXXXX\s0
.PP
.Vb 1
\&    $client\->on(new_friend=>sub{my ($client,$friend)=@_});
.Ve
.SS "lose_friend \s-1XXXX\s0"
.IX Subsection "lose_friend XXXX"
\&\s-1XXXXXXXXXXXXXXXXXXXXXX\s0
.PP
.Vb 1
\&    $client\->on(lose_friend=>sub{my ($client,$friend)=@_});
.Ve
.SS "new_group \s-1XXX\s0"
.IX Subsection "new_group XXX"
.Vb 1
\&    $client\->on(new_group=>sub{my ($client,$group)=@_});
.Ve
.SS "lose_group \s-1XXX\s0"
.IX Subsection "lose_group XXX"
.Vb 1
\&    $client\->on(lose_group=>sub{my ($client,$group)=@_});
.Ve
.SS "new_group_member \s-1XXXXX\s0"
.IX Subsection "new_group_member XXXXX"
.Vb 1
\&    $client\->on(new_group_member=>sub{my ($client,$group_member)=@_});
.Ve
.SS "lose_group_member \s-1XXXXX\s0"
.IX Subsection "lose_group_member XXXXX"
.Vb 1
\&    $client\->on(lose_group_member=>sub{my ($client,$group_member)=@_});
.Ve
.SS "new_discuss \s-1XXXXX\s0"
.IX Subsection "new_discuss XXXXX"
.Vb 1
\&    $client\->on(new_discuss=>sub{my ($client,$discuss)=@_});
.Ve
.SS "lose_discuss \s-1XXXXX\s0"
.IX Subsection "lose_discuss XXXXX"
.Vb 1
\&    $client\->on(lose_discuss=>sub{my ($client,$discuss)=@_});
.Ve
.SS "new_discuss_member \s-1XXXXXXX\s0"
.IX Subsection "new_discuss_member XXXXXXX"
.Vb 1
\&    $client\->on(new_discuss_member=>sub{my ($client,$discuss_member)=@_});
.Ve
.SS "lose_discuss_member \s-1XXXXXXX\s0"
.IX Subsection "lose_discuss_member XXXXXXX"
.Vb 1
\&    $client\->on(lose_discuss_member=>sub{my ($client,$discuss_member)=@_});
.Ve
.SS "receive_pic \s-1XXXX\s0"
.IX Subsection "receive_pic XXXX"
.Vb 8
\&    $client\->on(receive_pic=>sub{ 
\&        my($client,$filepath,$sender)=@_;
\&        #$filepath XXXXXXXXX
\&        #$sender   XXXXXXXXXXXXXXXXX
\&        if($sender\->is_friend){...;}
\&        elsif($sender\->is_group_member){...;}
\&        elsif($sender\->is_discuss_member){...;}
\&    });
.Ve
.SS "receive_friend_pic \s-1XXXXXX\s0"
.IX Subsection "receive_friend_pic XXXXXX"
.Vb 5
\&    $client\->on(receive_friend_pic=>sub{ 
\&        my($client,$filepath,$friend)=@_;
\&        #$filepath XXXXXXXXX
\&        #$friend   XXXXXXXXX
\&    });
.Ve
.SS "receive_sess_pic \s-1XXXXXXX\s0"
.IX Subsection "receive_sess_pic XXXXXXX"
.Vb 5
\&    $client\->on(receive_sess_pic=>sub{ 
\&        my($client,$filepath,$sender)=@_;
\&        #$filepath XXXXXXXXX
\&        #$sender   XXXXXXXXXXXXXX
\&    });
.Ve
.SS "receive_group_pic \s-1XXXXXX\s0"
.IX Subsection "receive_group_pic XXXXXX"
.Vb 6
\&    $client\->on(receive_group_pic=>sub{ 
\&        my($client,$filepath,$sender)=@_;
\&        #$fh       XXXXXXXXX
\&        #$filepath XXXXXXXXX
\&        #$sender   XXXXXXXXXX
\&    });
.Ve
.SS "first_talk \s-1XXXXXXX\s0"
.IX Subsection "first_talk XXXXXXX"
\&\s-1XXXXXXXXXXXXXXX4XXXXXXXXXXX\s0
.PP
.Vb 6
\&    $client\->on(first_talk=>sub{
\&        my($client,$sender,$msg) = @_;
\&        #$sender XXXXXXX XX XXX XX XXXXX
\&        #$msg    XXXXXX
\&        $sender\->send("XXXXXXXXX?");
\&    });
.Ve
.SS "before_send_message \s-1XXXXXX\s0"
.IX Subsection "before_send_message XXXXXX"
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
.Vb 6
\&    $client\->on(before_send_message=>sub{
\&        my($client,$msg) = @_;
\&        my $content = $msg\->content;
\&        $content .=  "XXXXXXXX";
\&        $msg\->content($content);
\&    });
.Ve
.SS "friend_property_change \s-1XXXXXXXXXX\s0"
.IX Subsection "friend_property_change XXXXXXXXXX"
.Vb 3
\&    $client\->on(friend_property_change=>sub{
\&        my($client,$friend,$property,$old_value,$new_value)=@_;
\&    });
.Ve
.SS "group_property_change \s-1XXXXXXXXX\s0"
.IX Subsection "group_property_change XXXXXXXXX"
.Vb 3
\&    $client\->on(group_property_change=>sub{
\&        my($client,$group,$property,$old_value,$new_value)=@_;
\&    });
.Ve
.SS "group_member_property_change \s-1XXXXXXXXXXX\s0"
.IX Subsection "group_member_property_change XXXXXXXXXXX"
.Vb 3
\&    $client\->on(group_member_property_change=>sub{
\&        my($client,$member,$property,$old_value,$new_value)=@_;
\&    });
.Ve
.SS "discuss_property_change \s-1XXXXXXXXX\s0"
.IX Subsection "discuss_property_change XXXXXXXXX"
.Vb 3
\&    $client\->on(discuss_property_change=>sub{
\&        my($client,$discuss,$property,$old_value,$new_value)=@_;
\&    });
.Ve
.SS "discuss_member_property_change \s-1XXXXXXXXXXX\s0"
.IX Subsection "discuss_member_property_change XXXXXXXXXXX"
.Vb 3
\&    $client\->on(discuss_member_property_change=>sub{
\&        my($client,$member,$property,$old_value,$new_value)=@_;
\&    });
.Ve
.SS "model_update_fail \s-1XXXXXXXXXXXXXX\s0"
.IX Subsection "model_update_fail XXXXXXXXXXXXXX"
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
XXXXXXXXXXXXXXXXcookieXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXXX\s0
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
.Vb 4
\&    $client\->on(model_update_fail=>sub{
\&        $client = shift;
\&        $client\->relogin();
\&    });
.Ve
.SS "receive_raw_message \s-1XXXXXXXXX\s0"
.IX Subsection "receive_raw_message XXXXXXXXX"
.Vb 5
\&    $client\->on(receive_raw_message=>sub{
\&        my ($client,$bytes,$hash) = @_;
\&        #$bytes XXXXXXXXX json XXXXXXXXXXX
\&        #$hash XX $bytes XX Mojo::JSON::decode_json XXXXX perl hash XX
\&    });
.Ve
.SH "XXXX"
.IX Header "XXXX"
.SS "load"
.IX Subsection "load"
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX:\s0
.PP
.Vb 4
\&    priority        #XXXXXXXXXXXXXX0XXXXXXXXXXXXXXXXX
\&    auto_call       #XXXXXXXXXXXXXXXXXXXX1
\&    call_on_load    #XXXXXXXXXXXXXXXX0
\&    data            #XXXXXXXXXXXXXXXXXXXXXcallXXXXXXXXXX
\&
\&    $client\->load(["plugin1","plugin2"],data=>[1,2,3,]);
\&    $client\->load("plugin",priority=>0,auto_call=>1);
.Ve
.PP
XXXXXXXXXXauto_callXXXXXXXXXXXXrunXXXXXXXXpriorityXXXXXXXXXXXX
.PP
\&\s-1XXXXXXXXXXXXXXXXXXX\s0
.SS "call"
.IX Subsection "call"
XXXXXXXXXXXauto_call=>0XXXXXXXXXXXXauto_call=>1XXXXXXXcall
.PP
.Vb 1
\&    $client\->call("plugin",[XXXX]);
.Ve
.PP
XXXXXXXXXXXXXXXXXXXXXXXXXXcallXXXXXXXXMojo::Webqq::Plugin::
.PP
XXXXXXXXXXXhello worldXXXXXXXXXXXXXXXXXXX\*(L"hello world\*(R"
.PP
\&\s-1XXXXX\s0 Mojo::Webqq::Plugin::HelloWorld
.PP
.Vb 12
\&    package Mojo::Webqq::Plugin::HelloWorld;
\&    our $PRIORITY = 10; #XXXXXXXloadXXXpriorityXXXXXXXXXXXXXXXX
\&    our $AUTO_CALL = 1; #XXXXXXXXXXXXXXXXXXXXXXXX
\&    sub call{
\&        my $client = shift;
\&        my $data   = shift; #XXXXXdataXX
\&        $client\->on(receive_message=>sub{
\&            my($client,$msg)=@_;
\&            $client\->reply_message($msg,"hello world");
\&        });
\&    }
\&    1;
.Ve
.PP
\&\s-1XXXXXXXXXXXXXX\s0
.PP
.Vb 3
\&    #XXXXXXXXMojo::Webqq::Plugin::XXXXXXXXXXXXXXXX"+"XXXXXXXX
\&    $client\->load("HelloWorld"); 
\&    $client\->run();
.Ve
.PP
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXhello world
.PP
\&\s-1XXX\s0
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXreceive_messageXXXXXXXXXXXXXXXXX
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
XXXXXXXXXXX$msg\->\fIallow_plugin\fR\|(0) XXXXXXXXXXXXXXXXXXXXXXXXallow_pluginXXX
.PP
\&\s-1XXXXXXXXXXXXXXXXXXX\s0
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.SH "XXXX"
.IX Header "XXXX"
.SS "Mojo::Webqq::Plugin::ShowMsg"
.IX Subsection "Mojo::Webqq::Plugin::ShowMsg"
\&\s-1XXXXXXX\s0
.PP
.Vb 4
\&    $client\->load("ShowMsg",data=>{
\&        allow_group => ["PERLXXXX"],  #XXXXXXXXXXXXXXXXXXXX
\&        ban_group   => ["XXX",123456], #XXXXXXXXXXXXXXXXXXXXX
\&    });
.Ve
.SS "Mojo::Webqq::Plugin::StockInfo"
.IX Subsection "Mojo::Webqq::Plugin::StockInfo"
\&\s-1XXXXXXXXXXXXXX\s0 \*(L"gp 000001\*(R" \s-1XX\s0 \*(L"\s-1XX\s0 000001\*(R" \s-1XX\s0
.PP
\&\s-1XXXXXXXXXX6XXXXXXX\s0
.PP
\&\s-1XX\s0 shalk  <https://github.com/shalk>
.SS "Mojo::Webqq::Plugin::MsgSync"
.IX Subsection "Mojo::Webqq::Plugin::MsgSync"
XXQQXXIRCXXXXXXXXXXXXXXXXXXirc botXXXXXXXXXXMojo::IRC\s-1XX\s0
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXX\s0 Mojo::Webqq::Plugin::IRCShell \s-1XXX\s0
.PP
.Vb 7
\&    $client\->load("MsgSync",data=>{
\&        irc=>{nick=>"xxxx",user=>"xxxx",pass=>"xxxx",server=>"irc.perfi.wang"},
\&        pairs=>[
\&            ["#ChinaPerl",$m\->search_group(gname=>"PERLXXXX")],
\&            ["#Mojolicious",$m\->search_group(gname=>"Mojolicious")],
\&        ]
\&    });
.Ve
.SS "Mojo::Webqq::Plugin::IRCShell"
.IX Subsection "Mojo::Webqq::Plugin::IRCShell"
XqqXXXXXircXXXXXXXXXXircXXXXXXXXircXXXXirc userXXXqqXXXXXXXXXXircXXXXXqq
.PP
\&\s-1XXXXXX\s0 Mojo::IRC::Server::Chinese
.PP
.Vb 10
\&    $client\->load("IRCShell",data=>{
\&        listen=>[ {host=>"127.0.0.1",port=>6667},], #XXXIRCXXXXXXXX+XXXXX0.0.0.0:6667
\&        load_friend => 1, #XXX0 XXXXXXXXXXXircXXXXXXXXX #XXXX
\&        master_irc_user => "XXQQXX", #XXXXXXircXXXXXX
\&    });
\&    #XXXXXXXX
\&    listen              #XXXXXXXXXXXXXXXXXXXXX
\&                        # listen=>[ {host=>"127.0.0.1",port=>6667}, {host=>"127.0.0.1",port=>6668}]
\&                        # XXXX127.0.0.1:6667X 127.0.0.1:6668XXXX
\&    master_irc_user     #XqqXXXirc userXXXXXXXXqqXXXXuserXXXXXipXXXXXXXXXXX
\&    load_friend         #0|1 XXX0 XXXXXXXXXXXircXXXXXXXXX #XXXX
\&    image_api           #XXelimageXXapiXXXXqqXXXXXXXXXXircXXXXXXXXXXXX
\&                        #XXXXXelimage http://img.vim\-cn.com/
.Ve
.PP
\&\s-1XXXX\s0 load_friend =>1 XXXqqXXXXXXXXircX '#XXXX' \s-1XXX\s0
.PP
XXqqXXXXircXXXXXXXXXXXqqX[\s-1PERLXXXX\s0]XXXircXXX'#PERLXXXX'
.PP
XXXXXircXXXXXXXXX,XXXXXircXXXXqqXXXXXXXXX
.PP
XXXXXXXXXLinuxXXXXXqqXircXXX
.PP
XXXXirc.perfi.wangX#PERLXXXXXXXXXXXQQX[\s-1PERLXXXX\s0]XX
.PP
XXXXirc.perfi.wangX#MojoliciousXXXXXXXQQX[Mojolicious]XX
.PP
XXXXirc.perfi.wangX#Mojo\-WebqqXXXXXXXQQX[Mojo\-Webqq]XX
.SS "Mojo::Webqq::Plugin::Perldoc"
.IX Subsection "Mojo::Webqq::Plugin::Perldoc"
XXXXQQXXXXperldocXXXXXperldoc \-f|\-v xxx
.PP
.Vb 2
\&    $client\->load("Perldoc");
\&    #XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX0
.Ve
.SS "Mojo::Webqq::Plugin::Perlcode"
.IX Subsection "Mojo::Webqq::Plugin::Perlcode"
XXQQXXXXPerlXXXXXXXlinuxXXXXX
.PP
.Vb 2
\&    $client\->load("Perlcode");
\&    #XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX0
.Ve
.PP
\&\s-1XXXXXXXX\s0 >>> \s-1XXXXXX\s0
.PP
.Vb 1
\&    >>> print "hello world";
.Ve
.SS "Mojo::Webqq::Plugin::ProgramCode"
.IX Subsection "Mojo::Webqq::Plugin::ProgramCode"
\&\s-1XXQQXXXXXXXXXXXXXXXXX26XXXXX:\s0
.PP
ruby/perl/clojure/coffeescript/bash/cpp/c/assembly/java/scala
.PP
csharp/d/erlang/go/idris/rust/php/elixir/fsharp/haskell/javascript
.PP
julia/lua/nim/ocaml/python
.PP
\&\s-1XXXXXX:\s0
.PP
.Vb 1
\&    $client\->load("ProgramCode");
.Ve
.PP
\&\s-1XXXXX\s0 \s-1XXX\s0 code|language>>>\s-1XXXXXX\s0
.PP
\fIphp\fR
.IX Subsection "php"
.PP
.Vb 3
\&        code|php>>>
\&        <?php
\&        echo "Hello World\en";
.Ve
.PP
\fIc\fR
.IX Subsection "c"
.PP
.Vb 6
\&        code|c>>>
\&        #include <stdio.h>
\&        int main() {
\&            printf("Hello World!\en");
\&            return 0;
\&        }
.Ve
.PP
\fIcpp\fR
.IX Subsection "cpp"
.PP
.Vb 7
\&        code|cpp>>>
\&        #include <iostream>
\&        using namespace std;
\&        int main() {
\&            cout << "Hello World!";
\&            return 0;
\&        }
.Ve
.PP
\fIjava\fR
.IX Subsection "java"
.PP
.Vb 6
\&        code|java>>>
\&        public class Main {
\&            public static void main(String[] args) {
\&                System.out.println("Hello World!");
\&            }
\&        }
.Ve
.PP
\&\s-1XX\s0 limengyu1990 <https://github.com/limengyu1990>
.SS "Mojo::Webqq::Plugin::MobileInfo"
.IX Subsection "Mojo::Webqq::Plugin::MobileInfo"
\&\s-1XXQQXXXXXXXXXXXXXXXXX\s0
.PP
.Vb 1
\&    XX 1888888888
.Ve
.PP
\&\s-1XX\s0 limengyu1990 <https://github.com/limengyu1990>
.SS "Mojo::Webqq::Plugin::KnowledgeBase"
.IX Subsection "Mojo::Webqq::Plugin::KnowledgeBase"
\&\s-1XXQQXXXXXXXXXX\s0
.PP
.Vb 1
\&    $client\->load("KnowledgeBase");
.Ve
.PP
\&\s-1XXXXX\s0 \s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0 \s-1XXX\s0
.PP
.Vb 4
\&    learn XXXXXXX  XXXX
\&    XX  "XXXX"      XXXX
\&    learn \*(AqXX XXX\*(Aq   "XXXX"
\&    learn* "XXXX"      XXXX XXXXXX*XXXXXXXXXXXXXXXXXXXXXXXXXXXXX
\&
\&    del   XXXXXXX
\&    XX  \*(AqXX XXX\*(Aq
\&    del*  XXXXXXX  XXXXXXXXX
.Ve
.PP
\&\s-1XXXXXXXX\s0
.PP
.Vb 10
\&    $client\->load("KnowledgeBase",data=>{
\&        allow_group => ["PERLXXXX"],  #XXXXXXXXXXXXXXXXXXXX
\&        ban_group   => ["XXX",123456], #XXXXXXXXXXXXXXXXXXXXX
\&        file => \*(Aq./KnowledgeBase.dat\*(Aq, #XXXXXXX
\&        learn_command  => \*(Aqlearn\*(Aq,     #XXXXXXXXXX
\&        delete_command =>\*(Aqdel\*(Aq,      #XXXXXXXXXX
\&        learn_operator => [12345,678910], #XXXXXXXXXXqqX
\&        delete_operator => [12345,678910], #XXXXXXXXXXqqX
\&        mode => \*(Aqfuzzy\*(Aq, # fuzzy|regex|exact XXXXXX|XX|XX, XXXX
\&    });
.Ve
.SS "Mojo::Webqq::Plugin::KnowledgeBase2"
.IX Subsection "Mojo::Webqq::Plugin::KnowledgeBase2"
XXXXXKnowledgeBaseXXXXXXXXXXXXX
.PP
1XXXXXXXXXXXXXXXXXXXXXX
.PP
\&\s-1XXXXXXXX\s0)  #  \s-1XXXXXXXXXXXXX\s0 #  \s-1XXXX\s0
.PP
\&\s-1XXXXXXXXXXXXX\s0
.PP
.Vb 8
\&    _\|_XX_\|_         #   XX                      # XXXXX
\&    _\|_XXXX_\|_     #   XX                      # XXX
\&    XXXX1        #   XXXXXXX            # XXX\enXXXX X\enXXXXX
\&    XXXX1        #   XXXXXXX            # XXX
\&    XXXX1        #   XXXXXXX            # XXXX XXXXXXXXXXXXXXXXXXXXXXX
\&    XXXX2        #   ^XX(\e?|)$               # XXXXX
\&    XXXX2        #   X(X|X)                 # XXXXX
\&    XXXX3        #   XXXXXXX            # XXXXX\e# XXX XXXXXXX
.Ve
.PP
2XXXXXXXXXXXXXXXXXXXXXXcheck_timeXXXXXXXXXXXX
.PP
.Vb 12
\&    $client\->load("KnowledgeBase2",data=>{
\&        allow_group => ["PERLXXXX"],  #XXXXXXXXXXXXXXXXXXXX
\&        ban_group   => ["XXX",123456], #XXXXXXXXXXXXXXXXXXXXX
\&        file => \*(Aq./KnowledgeBase2.txt\*(Aq, #XXXXXXXXXXXXXXXXXX
\&        learn_command  => \*(Aqlearn\*(Aq,     #XXXXXXXXXXXXX
\&        delete_command =>\*(Aqdel\*(Aq,      #XXXXXXXXXXXXX
\&        learn_operator => [12345,678910], #XXXXXXXXXXqqX
\&        delete_operator => [12345,678910], #XXXXXXXXXXqqX
\&        mode => \*(Aqfuzzy\*(Aq, # fuzzy|regex|exact XXXXXX|XX|XX, XXXX
\&        check_time => 10, #XX10XXXXXXXXX
\&        show_keyword => 1, #XXXXXXXXXXXXXXXXX0
\&    });
.Ve
.SS "Mojo::Webqq::Plugin::FuckDaShen"
.IX Subsection "Mojo::Webqq::Plugin::FuckDaShen"
XqqXXXXXX\*(L"\s-1XX\s0\*(R"\s-1XXXXXXX\s0
.PP
.Vb 1
\&    $client\->load("FuckDaShen");
.Ve
.SS "Mojo::Webqq::Plugin::Translation"
.IX Subsection "Mojo::Webqq::Plugin::Translation"
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
.Vb 3
\&    XX hello
\&    XX XX
\&    XX XXXXX
.Ve
.SS "Mojo::Webqq::Plugin::Riddle"
.IX Subsection "Mojo::Webqq::Plugin::Riddle"
\&\s-1XXXXXXXXXXXX\s0 limengyu1990 <https://github.com/limengyu1990>
.PP
.Vb 1
\&    $client\->load("Riddle");
\&    
\&    $client\->load("Riddle",data=>{
\&        allow_group => ["PERLXXXX"],  #XXXXXXXXXXXXXXXXXXXX
\&        ban_group   => ["XXX",123456], #XXXXXXXXXXXXXXXXXXXXX
\&        ban_user    => ["XX",123456], #XXXXXXXXXXXXXXXXXXXXXXXqqXX
\&        command     => "XX",   #XXXXXXXX
\&        apikey      => "xxxx",   #XXXXX http://apistore.baidu.com/apiworks/servicedetail/440.html?qq\-pf\-to=pcqq.c2c
\&        timeout     => 30, #XXXXXXXXXXXXXXXXXXXX
\&    });
.Ve
.SS "Mojo::Webqq::Plugin::ShowQRcode"
.IX Subsection "Mojo::Webqq::Plugin::ShowQRcode"
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXX\s0 autodataming <https://github.com/autodataming>
.PP
.Vb 1
\&    $client\->load("ShowQRcode");#XXXXXwin
.Ve
.SS "Mojo::Webqq::Plugin::GasPrice"
.IX Subsection "Mojo::Webqq::Plugin::GasPrice"
\&\s-1XXXXXXXXXXXX\s0 hyvinlam <https://github.com/hyvinlam>
.PP
.Vb 1
\&    $client\->load("GasPrice");
\&    
\&    $client\->load("GasPrice",data=>{
\&        allow_group => ["PERLXXXX"],  #XXXXXXXXXXXXXXXXXXXX
\&        ban_group   => ["XXX",123456], #XXXXXXXXXXXXXXXXXXXXX
\&        command     => "XX",   #XXXXXXXX
\&        apikey      => "xxxx",   #XXXXX http://apistore.baidu.com/apiworks/servicedetail/710.html
\&        msg_tail    => "XXXX", #XX
\&        is_need_at  => 0, #XXXXXX,XXXX0
\&    });
.Ve
.SS "Mojo::Webqq::Plugin::Qiandao"
.IX Subsection "Mojo::Webqq::Plugin::Qiandao"
\&\s-1QQXXXXXXX\s0
.PP
.Vb 1
\&    $client\->load("Qiandao");
\&    
\&    $client\->load("Qiandao",data=>{
\&        allow_group => ["PERLXXXX"],  #XXXXXXXXXXXXXXXXXXXX
\&        ban_group   => ["XXX",123456], #XXXXXXXXXXXXXXXXXXXXX
\&        is_qiandao_on_login => 0 ,        #XXXXXXXXXXXXXXXXX0
\&        qiandao_time => "09:30" ,         #XXXXXXXXXXXXXX 09:30
\&    });
.Ve
.SS "Mojo::Webqq::Plugin::GroupManage"
.IX Subsection "Mojo::Webqq::Plugin::GroupManage"
\&\s-1XXXXXXXXXX\s0 \s-1XXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
.Vb 10
\&    $client\->load("GroupManage",data=>{ 
\&        allow_group => ["PERLXXXX"],  #XXXXXXXXXXXXXXXXXXXX
\&        ban_group   => ["XXX",123456], #XXXXXXXXXXXXXXXXXXXXX
\&        new_group_member => \*(AqXXXXX @%s XX[XX][XX][XX]\*(Aq, #XXXXXXXXX%sXXXXXXXXXX
\&        lose_group_member => \*(AqXXX @%s XXXXX[XX][XX][XX]\*(Aq, #XXXXXX
\&        speak_limit => {#XXXXXXXX
\&            period          => 10, #XXXXXXXXX
\&            warn_limit      => 8, #XXXXXXXXXXXXXXXXX
\&            warn_message    => \*(Aq@%s XX, XXXXXXXXXXXXXXXXXXX\*(Aq, #XXXX
\&            shutup_limit    => 10, #XXXXXXXXXXXXXXXXX
\&            shutup_time     => 600, #XXXX
\&            #kick_limit      => 15,   #XXXXXXXXXXXXXXXXXXX
\&        },
\&        pic_limit => {#XXXXXX
\&            period          => 600,
\&            warn_limit      => 6,
\&            warn_message   => \*(Aq@%s XX, XXXXXXXXXXXXXXXXX\*(Aq,
\&            shutup_limit    => 8,
\&            kick_limit      => 10,
\&        },
\&        keyword_limit => {
\&            period=> 600,
\&            keyword=>[qw(fuck XX XX X)],
\&            warn_limit=>3,
\&            shutup_limit=>5,
\&            #kick_limit=>undef,
\&        },
\&    });
.Ve
.SS "Mojo::Webqq::Plugin::UploadQRcode"
.IX Subsection "Mojo::Webqq::Plugin::UploadQRcode"
XXXXXXXXXXXXXXXXXXXXXXXXXXXurlXX
.PP
.Vb 1
\&    $client\->load("UploadQRcode");
.Ve
.SS "Mojo::Webqq::Plugin::PostQRcode"
.IX Subsection "Mojo::Webqq::Plugin::PostQRcode"
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXQQXXXXX\s0
.PP
\&\s-1XXX\s0 \s-1XXXXXXXXXXXXXXX\s0 Mojo::SMTP::Client MIME::Lite\s-1XXXXXXX\s0
.PP
.Vb 10
\&    $client\->load("PostQRcode",data=>{
\&        smtp    =>  \*(Aqxxxx\*(Aq, #XXXsmtpXX  
\&        port    =>  \*(Aqxxxx\*(Aq, #smtpXXXXXXXX25
\&        from    =>  \*(Aqxxxx\*(Aq, #XXX
\&        to      =>  \*(Aqxxxx\*(Aq, #XXX
\&        user    =>  \*(Aqxxxx\*(Aq, #smtpXXXX
\&        pass    =>  \*(Aqxxxx\*(Aq, #smtpXXXX
\&        tls     =>  0,      #XXXXXXXSMTPSXXXXXX0
\&                            #XXXXXXXXXXXXXXXXXX465XXXXXXXXXXXX1
\&    });
\&
\&    XXXXXXXXXX
\&
\&    XXXQQXX xxxx XXXXX
\&    XXXwebqq_qrcode_xxxx.png
\&    XXXXXXXXQQXXXXXXXXX
.Ve
.SS "Mojo::Webqq::Plugin::PostImgVerifycode"
.IX Subsection "Mojo::Webqq::Plugin::PostImgVerifycode"
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
\&\s-1XXX\s0 \s-1XXXXXXXXXXXXXXX\s0 Mojo::SMTP::Client MIME::Lite\s-1XXXXXXX\s0
.PP
.Vb 10
\&    $client\->load("PostImgVerifycode",data=>{
\&        smtp    =>  \*(Aqxxxx\*(Aq, #XXXsmtpXX  
\&        port    =>  \*(Aqxxxx\*(Aq, #smtpXXXXXXXX25
\&        from    =>  \*(Aqxxxx\*(Aq, #XXX
\&        to      =>  \*(Aqxxxx\*(Aq, #XXX
\&        user    =>  \*(Aqxxxx\*(Aq, #smtpXXXX
\&        pass    =>  \*(Aqxxxx\*(Aq, #smtpXXXX
\&        post_host => \*(Aqxxx.xxx.xxx.xxx\*(Aq , #XXXXIPXXXXXXXXX
\&        post_port => \*(Aqxxxx\*(Aq            , #XXXXXXXXXXXXXXXXXXX1987
\&    });
\&
\&    XXXXXXXXXX
\&
\&    XXXQQXX xxxx XXXXX
\&    XXXwebqq_img_verfiy_xxxx.jpg
\&    XXXXXXXXXXXXXXXXhttp://xxx.xxx.xxx.xxx:xxxx/check_code
.Ve
.SS "Mojo::Webqq::Plugin::SmartReply"
.IX Subsection "Mojo::Webqq::Plugin::SmartReply"
\&\s-1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
\&\s-1XXXXXXXXXXXXXXXXXXXXX\s0 \f(CW@XXXX\fR \s-1XXX\s0
.PP
.Vb 10
\&    $client\->load("SmartReply",data=>{
\&        apikey          => \*(Aq4c53b48522ac4efdfe5dfb4f6149ae51\*(Aq, #XXXXXhttp://www.tuling123.com/html/doc/apikey.html
\&        allow_group     => ["PERLXXXX"],  #XXXXXXXXXXXXXXXXXXXX
\&        ban_group       => ["XXX",123456], #XXXXXXXXXXXXXXXXXXXXX
\&        ban_user        => ["XX",123456], #XXXXXXXXXXXXXXXXXXXXXXXqqXX
\&        notice_reply    => ["XXXXXXXXXXXXXXX","XXXXXXXXXXXX"], #XXXXXXXX
\&        notice_limit    => 8 ,  #XXXXXXXXXXXXXXXXXXXXXXXXX notice_reply
\&        warn_limit      => 10,  #XX,XXXXXXXXXX
\&        ban_limit       => 12,  #XX,XXXXXXXXXXXXXXXXXX
\&        ban_time        => 1200,#XXXXXXXXXXXXX1200X
\&        period          => 600, #XXXXXXXXXX X
\&        is_need_at      => 1,  #XXX1 XXXXXXXXXXX
\&        keyword         => [qw(XX XX XX)], #XXXXXXXXXXXXXXXXXis_need_at=>0
\&    });
.Ve
.SS "Mojo::Webqq::Plugin::Openqq"
.IX Subsection "Mojo::Webqq::Plugin::Openqq"
\&\s-1XXHTTP\s0 \s-1APIXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\s0
.PP
.Vb 2
\&    #XXXXXXdataXXXARRAYXX,XXXXXXXXXXXXXX
\&    $client\->load("Openqq",data=>[ {host=>"127.0.0.1",port=>5000}, ]); 
\&
\&    #XXXXdataXXXXXHASHXX
\&    $client\->load("Openqq",data=>{                                                 
\&        listen => [ {host=>"127.0.0.1",port=>5000}, ] , #XXXXXXXXXXXXX
\&        auth   => sub {my($param,$controller) = @_},    #XXXXXXXXXXXXXXXXXX
\&        post_api => \*(Aqhttp://xxxx\*(Aq,                      #XXXXXXXXXXXXXXX,XXXXXXXXXXXXXXX
\&    });
\&
\&    #XdataXXXXauthXXXXXXXXapiXXXXXX
\&    #XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX403
\&
\&    #XXXXXXXXXXXXXXXHASHXXXXXgetXpostXXXXXXX
\&    #XXXXXXXXMojoliciousXcontrollerXXXXXXMojoliciousXXXXXXXXXXXcontrollerXXXXXXXXX
\&
\&    #authXXXXX
\&
\&    #XXXXXXXXXXX 
\&    #http://127.0.0.1/openqq/send_message?id=xxxx&content=xxxx&key=xxxx&exp=xxxx
\&    sub {
\&        my $param = shift;
\&        my $secret = \*(Aqthis is your secret key\*(Aq;
\&        return 0 if time() >= $param\->{exp}; #XXXXexpXXXXXXXXXXXXXXXXX
\&        if($param\->{key} eq md5_sum($secret . join "",@$param{qw(id gid did content exp)} )){
\&            return 1; #secretXXXXXXXXXXXXXXXXXmd5 XXXXkeyXXXXXX
\&        }
\&        else{
\&            return 0; 
\&        }
\&    }
\&
\&    #XXcontrollerXXXXXIPXXXXXXXXXcontrollerXXXXXXXX Mojolicious::Controller
\&    sub{
\&        my ($param,$controller) = @_;
\&        if($controller\->tx\->remote_address eq "127.0.0.1"){
\&            return 1;
\&        }
\&        return 0;
\&    }
\&
\&    #XXXXXXXXXXX
\&    $client\->load("Openqq",data=>{
\&        listen => [{host=>xxx,port=>xxx}],
\&        post_api=> \*(Aqhttp://127.0.0.1:3000/post_api\*(Aq,
\&    });
\&
\&    #XXXXXXXXXXXXHTTP POSTXXXXXXjsonXXXXXXXXhttp://127.0.0.1:3000/post_api
\&    
\&    connect to 127.0.0.1 port 3000    
\&    POST /post_api
\&    Accept: */*
\&    Content\-Length: xxx
\&    Content\-Type: application/json
\&    
\&    {
\&        "msg_time":"1442542632",
\&        "content":"XXXX",
\&        "msg_class":"recv",
\&        "sender":"XX",
\&        "sender_id":"2372835507",
\&        "sender_qq":"456789",
\&        "receiver":"XX",
\&        "receiver_id":"4072574066",
\&        "receiver_qq":"123456",
\&        "group":"PERLXXXX",
\&        "group_id":"2617047292",
\&        "gnumber":"67890",
\&        "msg_id":"10856",
\&        "type":"group_message"
\&    }
\&
\&    XXXXXXpost_apiXXXXXXXXXXXXXXXXXXX
\&    post_apiXXXXXXXXXXXX text/json XX application/jsonXXXjsonXXXXXXX
\&    
\&        {
\&            "reply":"xxxxx",    #XXXXXXXXXXreplyXXX
\&            "shutup": 1,        #XXXXXXXXXXXXX
\&            "shutup_time": 60,  #XXXXXXXXXX60s
\&        } 
\&
\&    XXXXXXXpost_apiXXXXXXXXXXXXXXpost_apiXXXXXXX
\&
\&    HTTP/1.1 200 OK
\&    Connection: close
\&    Content\-Type: application/json;charset=UTF\-8
\&    Date: Mon, 29 Feb 2016 05:53:31 GMT
\&    Content\-Length: 27
\&    Server: Mojolicious (Perl)
\&
\&    {"reply":"XX","code":0}
\&    
\&    XXXXXXXXXXXXXXXXXXXXX "XX"
\&    XXXXXXXXXXXXXXXXXXXXXXXX
.Ve
.PP
XXXXXXXXXXXXXXXAPIXXXXXXjsonXXXXXX
.PP
.Vb 6
\&    #XXXX
\&    /openqq/get_user_info           #XXXXXX
\&    /openqq/get_friend_info         #XXXXXX
\&    /openqq/get_group_info          #XXXXX
\&    /openqq/get_discuss_info        #XXXXXXX
\&    /openqq/get_recent_info         #XXXXXXXXXXX
\&    
\&    #XXXXXXXXGETXPOST
\&    /openqq/send_message            #XXXXXX XXid=xxx&content=xxx X qq=xxx&content=xxx
\&    /openqq/send_group_message      #XXXXX   XXgid=xxx&content=xxx X gnumber=xxx&content=xxx
\&    /openqq/send_discuss_message    #XXXXXXX XXdid=xxx&content=xxx XXXXXXXXXXXXXXXXX
\&    /openqq/send_sess_message       #XXXXXXX  XX gid=xxx&id=xxx&content=xxx X gnumber=xxx&qq=xxx&content=xxx
\&    /openqq/send_sess_message       #XXXXXXXXX XX did=xxx&id=xxx&content=xxx X did=xxx&qq=xxx&content=xxx
.Ve
.PP
\&\s-1XXXX\s0
.PP
.Vb 3
\&    http://127.0.0.1:5000/openqq/get_user_info
\&    http://127.0.0.1:5000/openqq/send_message?id=xxx&content=hello 
\&    http://127.0.0.1:5000/openqq/send_message?id=xxx&content=%e4%bd%a0%e5%a5%bd (XXXXutf8XXXXXurlencode)
.Ve
.SS "Mojo::Webqq::Plugin::Pu"
.IX Subsection "Mojo::Webqq::Plugin::Pu"
\&\s-1XXXXX\s0 \*(L"\s-1XX\s0\*(R",\*(L"\s-1XX\s0\*(R",\*(L"\s-1XX\s0\*(R",\*(L"\s-1XX\s0\*(R" \s-1XXXXXX\s0 \s-1XX\s0<https://github.com/bollwarm>
.PP
.Vb 1
\&    $client\->load("Pu");
.Ve
.SS "Mojo::Webqq::Plugin::ZiYue"
.IX Subsection "Mojo::Webqq::Plugin::ZiYue"
\&\s-1XXXXX\s0 \*(L"\s-1XX\s0\*(R",\*(L"\s-1XX\s0\*(R",\*(L"\s-1XXXX\s0\*(R" \s-1XXXXXX\s0 \s-1XX\s0<https://github.com/bollwarm>
.PP
.Vb 1
\&    $client\->load("ZiYue");
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Weixin::Client
.PP
https://github.com/sjdy521/Mojo\-Webqq <https://github.com/sjdy521/Mojo-Webqq>
.SH "AUTHOR"
.IX Header "AUTHOR"
sjdy521, <sjdy521@163.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2014 by sjdy521
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.10.1 or,
at your option, any later version of Perl 5 you may have available.
